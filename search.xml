<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>概统-第一章</title>
      <link href="/2025/09/19/rd-1/"/>
      <url>/2025/09/19/rd-1/</url>
      
        <content type="html"><![CDATA[<h1>概率论基本概念</h1><p>除了教材，主要参考了：<a href="https://note.isshikih.top/cour_note/D1CX_ProbabilityAndStatistics/Chap01/#%E6%A0%B7%E6%9C%AC%E7%A9%BA%E9%97%B4%E4%B8%8E%E9%9A%8F%E6%9C%BA%E4%BA%8B%E4%BB%B6"> Isshiki修’s Notebook</a></p><h2 id="样本空间和随机事件">样本空间和随机事件</h2><p>主要是一些概念，在高中基本都学过，这里就选部分来说：</p><ul><li><strong>随机试验</strong>：对随机现象的观察，特点为“可复现”，“可事先知道所有可能结果”</li><li><strong>样本空间</strong>：所有可能结果的集合，记作 <strong>S</strong></li><li><strong>样本点</strong>：样本空间的每一个元素，即试验的每一个结果</li><li><strong>随机事件</strong>：样本空间的子集，简称<strong>事件</strong></li><li><strong>基本事件</strong>：只有一个样本点的事件</li><li><strong>事件发生</strong>：事件包含的一个样本点发生了</li></ul><p>后面还有和事件，积事件，对立事件等概念，还有事件的运算规则等等——看似在讲事件，实际在讲集合，没什么意思，此处略</p><h2 id="概率和频率">概率和频率</h2><p>概率和频率的关系在高中也有提及，这里简单介绍一下：</p><h3 id="频率">频率</h3><p>设事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 次重复试验中发生 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">n_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 次（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">n_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 又称<strong>频数</strong>），称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><msub><mi>n</mi><mi>A</mi></msub><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{n_A}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0567em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7117em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4103em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 为事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 在这 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 次试验中发生的<strong>频率</strong>，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_n(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span>，即：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>f</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><msub><mi>n</mi><mi>A</mi></msub><mi>n</mi></mfrac><mo>=</mo><mfrac><mtext>频数</mtext><mtext>试验总次数</mtext></mfrac></mrow><annotation encoding="application/x-tex">f_n(A)=\frac{n_A}{n}=\frac{频数}{试验总次数}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7936em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">试验总次数</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">频数</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h3 id="概率">概率</h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_n(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span> 的稳定值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span> 定义为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 的<strong>概率</strong>，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">P(A)=p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></p><p>公理化定义和概率的一些性质就不给出了，都是一些显而易见的东西</p><h2 id="等可能概型">等可能概型</h2><p>当一个随机试验满足：</p><ol><li>样本空间中样本点有限</li><li>出现每一个样本点概率相等</li></ol><p>这个试验问题称为<strong>等可能概型</strong>，又称<strong>古典概型</strong></p><p>在等可能概型中，任意事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 的概率为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>A</mi><mtext>中包含的样本点数</mtext></mrow><mrow><mi>S</mi><mtext>中总样本点数</mtext></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(A)=\frac{A中包含的样本点数}{S中总样本点数}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord cjk_fallback">中总样本点数</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="mord cjk_fallback">中包含的样本点数</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="条件概率">条件概率</h2><p>印象里，在高中，条件概率相关的内容还是有难度的</p><h3 id="条件概率-2">条件概率</h3><p>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">P(B)&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，那么在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 发生的条件下 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 发生的<strong>条件概率</strong>为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi>B</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(A|B)=\frac{P(AB)}{P(B)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>条件概率也可以理解为“在新样本空间下的概率度量”</p><p>丢一张韦恩图方便理解</p><p><img src="/image/rd_pic/vn.png" alt="vn"></p><h3 id="乘法公式">乘法公式</h3><p>一般的</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><mi>B</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(AB)=P(A|B)P(B)=P(B|A)P(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></span></p><p>其实就是条件概率定义式的变形，当然，直观理解也是很显然的</p><p>推广有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mn>1</mn></msub><msub><mi>A</mi><mn>2</mn></msub><mo>…</mo><msub><mi>A</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>A</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>…</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>A</mi><mn>1</mn></msub><msub><mi>A</mi><mn>2</mn></msub><mo>…</mo><msub><mi>A</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(A_1A_2…A_n)=P(A_1)P(A_2|A_1)…P(A_n|A_1A_2…A_{n-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><h3 id="全概率公式、贝叶斯公式">全概率公式、贝叶斯公式</h3><p>设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 是某试验的样本空间，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>B</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>B</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">B_1,B_2,…,B_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为试验的一组事件，且满足</p><ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>i</mi></msub><msub><mi>B</mi><mi>j</mi></msub><mo>=</mo><mi mathvariant="normal">∅</mi><mo separator="true">,</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>n</mi><mo separator="true">,</mo><mi>i</mi><mo mathvariant="normal">≠</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">B_iB_j=\emptyset,i,j=1,2,…,n,i\ne j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9444em;vertical-align:-0.1944em;"></span><span class="mord">∅</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∪</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>B</mi><mi>i</mi></msub><mo>=</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">\cup_{i=1}^nB_i=S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.942em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mbin">∪</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></li></ol><p>则称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>B</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>B</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">B_1,B_2,…,B_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为一个<strong>划分</strong>，或称一个<strong>完备事件组</strong></p><p>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>B</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>B</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">B_1,B_2,…,B_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为一个划分，有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(A)=\sum_{i=1}^n P(B_i)P(A|B_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>上面的就是<strong>全概率公式</strong></p><p>由此又可得</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><msub><mi>B</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><msub><mi>B</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(B_k|A)=\frac{P(AB_k)}{P(A)}=\frac{P(A|B_k)P(B_k)}{\sum_{i=1}^n P(B_i)P(A|B_i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.421em;vertical-align:-0.994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.3057em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>上面的就是<strong>贝叶斯公式</strong>，可以发现，它的推导运用了条件概率定义式、乘法公式、全概率公式，还是很有意思的。其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(B_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>被称为先验概率，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>B</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(B_k|A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span>被称为后验概率</p><h2 id="事件独立性和独立试验">事件独立性和独立试验</h2><p>若事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A,B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(AB)=P(A)P(B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span>，则称事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A,B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 相互独立</p><p>由乘法公式，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mo mathvariant="normal">≠</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">P(A)P(B)\ne 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 时，上式亦可写作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mi mathvariant="normal">∣</mi><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(A|B)=P(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(B|A)=P(B)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span></span></span></span></p><p>另有定理：当事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 与事件 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 相互独立时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mtext>与</mtext><mover accent="true"><mi>B</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">A与\bar B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8201em;"></span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">与</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mtext>与</mtext><mi>B</mi></mrow><annotation encoding="application/x-tex">\bar A 与B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8201em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord cjk_fallback">与</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo>ˉ</mo></mover><mtext>与</mtext><mover accent="true"><mi>B</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar A与\bar B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8201em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mord cjk_fallback">与</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span> 亦相互独立</p><p>另外，当设计两个以上的事件时，“相互独立”不等于“两两独立”</p>]]></content>
      
      
      <categories>
          
          <category> 课程笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADS_Lecture 2</title>
      <link href="/2025/09/10/ads-2/"/>
      <url>/2025/09/10/ads-2/</url>
      
        <content type="html"><![CDATA[<p>依然参考了：</p><p><a href="https://note.isshikih.top/cour_note/D2CX_AdvancedDataStructure/Lec02/">Lecture 2 | Red Black Tree &amp; B+ Tree - Isshiki修’s Notebook</a></p><p>以及<a href="https://media.githubusercontent.com/media/NoughtQ/ZJU-Courses-Resources/refs/heads/main/ADS-D2QD/2024%E6%98%A5%E5%A4%8FADS%E8%AE%B2%E4%B9%89-wyy.pdf?download=true">这篇讲义</a></p><h2 id="Red-Black-Tree">Red Black Tree</h2><p>关于红黑树，只闻C++中set容器似乎是以之为底层，我在算法竞赛教材里都未见其名，看来并非等闲之辈。</p><p>先放张<a href="https://oi-wiki.org/ds/rbtree/#insert-case-1">OI-Wiki</a>里的图给各位看看红黑树长啥样：</p><p><img src="/image/ads_pic/rbtree.png" alt=""></p><p>红黑树也是一种二叉平衡树，维护的基础手段也是通过旋转。</p><p>经过一番学习后，感觉红黑树真是一种神奇的存在；用莫名其妙的五条性质，保证了它能够“存在即平衡”；插入和删除操作，利用递归和旋转，巧妙地维持了其性质；虽然情况复杂，但每次操作仅用常数次的旋转来调整，十分高效。</p><h3 id="五条基本性质">五条基本性质</h3><ol><li>结点只能为黑色或红色</li><li>根结点为黑色</li><li>NIL为黑色（NIL含义见上图）</li><li>红色结点不相邻</li><li>从某个结点 X 出发到达一个NIL的任意一条简单路径上的黑色结点个数相等（不含 X 本身），称为X 的黑高</li></ol><h3 id="为何平衡">为何平衡</h3><p>如何从这五条性质推导出红黑树的相对平衡？</p><p>设树 T 有 N 个内部结点，高为h，黑高为 bh</p><p>通过归纳法可证：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>≥</mo><msup><mn>2</mn><mrow><mi>b</mi><mi>h</mi></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">N\ge 2^{bh}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9324em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">bh</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mi>h</mi><mo>≤</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mo stretchy="false">(</mo><mi>N</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">bh\le \log_2 (N+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal">bh</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p>又有：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>≤</mo><mn>2</mn><mo>∗</mo><mi>b</mi><mi>h</mi><mo>≤</mo><mn>2</mn><mo>∗</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mo stretchy="false">(</mo><mi>N</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h\le2*bh\le2*\log_2(N+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal">bh</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p>即树高不超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>∗</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mo stretchy="false">(</mo><mi>N</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2*\log_2 (N+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，每次操作皆为O(log N)，树自然是平衡的</p><h3 id="插入">插入</h3><p>当插入位置与红色结点相邻：</p><p>分两种情况，第一种情况能一步到位，套用AVL树的旋转即可，第二种情况要向上递归</p><p>至于递不递归，看叔叔颜色行事</p><p>叔叔是红的，就一步到位；叔叔是黑的，就递归，直到父亲为黑或者叔叔变红或者父亲为根</p><h3 id="删除">删除</h3><p>我比较喜欢修佬的方法分为五种情况</p><p>当删除黑色结点，而且位置被黑色结点或NIL接替时：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">1.1</span> : 红色父亲，黑色侄子——一步到位</span><br><span class="line"></span><br><span class="line">   <span class="keyword">case</span> <span class="number">1.2</span> :黑色父亲，黑色兄弟，黑色侄子——染色后递归</span><br><span class="line"></span><br><span class="line">   <span class="keyword">case</span> <span class="number">2</span> :红色远侄子——一步到位</span><br><span class="line"></span><br><span class="line">   <span class="keyword">case</span> <span class="number">3</span> :红色近侄子，黑色远侄子——旋转得红色远侄子</span><br><span class="line"></span><br><span class="line">   <span class="keyword">case</span> <span class="number">4</span> :红色兄弟——旋转得红色父亲，再分情况</span><br></pre></td></tr></table></figure><p>可以发现，我们要考虑的变量有四个：父亲、兄弟以及两个侄子的颜色，就算加上“红不见红”的性质，也一共有九种可能，如果分左右，就是18种；其实情况五还表明，近侄子儿子的颜色也会影响结果，所以不止18种。就算修佬总结为了五种，情况依然复杂。怎么去记呢？</p><ol><li><p>先记 ending points，case 1.1 和 case 2 都可以一步到位，特征分别是“红父黑侄”和“红色远侄子”</p></li><li><p>再记不得不旋转的情况，case 3 和 case 4 中都进行了一次<strong>不改变黑高</strong>的旋转，特征分别是“红色近侄”和“红色兄弟”</p></li><li><p>最后是 case 1.2，不改变树的形状，染色后递归，特征是全黑</p></li></ol><p>最后让我看看自己能不能把模板搓出来</p><p>本来写了203行，做了个小优化（把交换颜色这步写进了旋转函数，因为二者同时发生）后减到了181行，又做了个优化（用 a, b, c, w, x 等代表结点，并减少了一些不必要的括号）压到了136行，成品：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"><span class="type">int</span> val,c;</span><br><span class="line"><span class="type">int</span> ls,rs;</span><br><span class="line">&#125;tree[N];</span><br><span class="line"><span class="type">int</span> n,op,root,ct,num;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">L</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> ls=tree[u].ls;</span><br><span class="line"><span class="built_in">swap</span>(tree[ls].c,tree[u].c);</span><br><span class="line">tree[u].ls=tree[ls].rs;tree[ls].rs=u;</span><br><span class="line"><span class="keyword">return</span> ls;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">R</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> rs=tree[u].rs;</span><br><span class="line"><span class="built_in">swap</span>(tree[rs].c,tree[u].c);</span><br><span class="line">tree[u].rs=tree[rs].ls;tree[rs].ls=u;</span><br><span class="line"><span class="keyword">return</span> rs;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!u) <span class="keyword">return</span> ct;</span><br><span class="line"><span class="keyword">if</span>(num&lt;=tree[u].val)&#123;</span><br><span class="line"><span class="type">int</span> ls=tree[u].ls=<span class="built_in">insert</span>(tree[u].ls);</span><br><span class="line"><span class="keyword">if</span>(tree[ls].c&amp;&amp;(tree[tree[ls].ls].c||tree[tree[ls].rs].c))&#123;</span><br><span class="line"><span class="keyword">if</span>(tree[tree[u].rs].c) tree[ls].c=tree[tree[u].rs].c=<span class="number">0</span>,tree[u].c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tree[tree[ls].ls].c) u=<span class="built_in">L</span>(u);</span><br><span class="line"><span class="keyword">else</span> tree[u].ls=<span class="built_in">R</span>(ls),u=<span class="built_in">L</span>(u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="type">int</span> rs=tree[u].rs=<span class="built_in">insert</span>(tree[u].rs);</span><br><span class="line"><span class="keyword">if</span>(tree[rs].c&amp;&amp;(tree[tree[rs].rs].c||tree[tree[rs].ls].c))&#123;</span><br><span class="line"><span class="keyword">if</span>(tree[tree[u].ls].c) tree[rs].c=tree[tree[u].ls].c=<span class="number">0</span>,tree[u].c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tree[tree[rs].rs].c) u=<span class="built_in">R</span>(u);</span><br><span class="line"><span class="keyword">else</span> tree[u].rs=<span class="built_in">L</span>(rs),u=<span class="built_in">R</span>(u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!u) <span class="keyword">return</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,tree[u].val);<span class="built_in">print</span>(tree[u].ls);<span class="built_in">print</span>(tree[u].rs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!tree[u].rs) <span class="keyword">return</span> u;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">find</span>(tree[u].rs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">del</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!u) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> flag=<span class="number">0</span>,a=u,x=tree[u].ls,w=tree[u].rs;</span><br><span class="line"><span class="type">int</span> b=tree[w].ls,c=tree[w].rs;</span><br><span class="line"><span class="keyword">if</span>(val==tree[u].val)&#123;</span><br><span class="line"><span class="keyword">if</span>(!tree[u].ls&amp;&amp;!tree[u].rs)&#123;</span><br><span class="line"><span class="keyword">if</span>(!tree[u].c) tree[<span class="number">0</span>].c=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tree[u].ls&amp;&amp;!tree[u].rs)&#123;</span><br><span class="line"><span class="keyword">if</span>(!tree[u].c&amp;&amp;!tree[tree[u].ls].c) tree[tree[u].ls].c=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!tree[u].c) tree[tree[u].ls].c=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> tree[u].ls;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!tree[u].ls&amp;&amp;tree[u].rs)&#123;</span><br><span class="line"><span class="keyword">if</span>(!tree[u].c&amp;&amp;!tree[tree[u].rs].c) tree[tree[u].rs].c=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!tree[u].c) tree[tree[u].rs].c=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> tree[u].rs;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> v=<span class="built_in">find</span>(tree[u].ls);</span><br><span class="line">tree[u].val=tree[v].val;</span><br><span class="line">tree[u].ls=<span class="built_in">del</span>(tree[u].ls,tree[v].val);</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(val&lt;tree[u].val||flag)&#123;</span><br><span class="line">tree[u].ls=<span class="built_in">del</span>(tree[u].ls,val);</span><br><span class="line"><span class="keyword">if</span>(tree[x].c==<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(tree[a].c&amp;&amp;!tree[b].c&amp;&amp;!tree[c].c) tree[a].c=tree[x].c=<span class="number">0</span>,tree[w].c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tree[c].c) u=<span class="built_in">R</span>(a),tree[c].c=tree[x].c=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tree[b].c)&#123;</span><br><span class="line">tree[u].rs=<span class="built_in">L</span>(w);</span><br><span class="line">u=<span class="built_in">R</span>(a),tree[w].c=tree[x].c=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tree[w].c)&#123;</span><br><span class="line">u=<span class="built_in">R</span>(a);</span><br><span class="line"><span class="keyword">if</span>(!tree[tree[b].ls].c&amp;&amp;!tree[tree[b].rs].c) tree[a].c=tree[x].c=<span class="number">0</span>,tree[b].c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tree[tree[b].rs].c) tree[w].ls=<span class="built_in">R</span>(a),tree[x].c=tree[tree[b].rs].c=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">tree[a].rs=<span class="built_in">L</span>(b);</span><br><span class="line">tree[w].ls=<span class="built_in">R</span>(a),tree[x].c=tree[b].c=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> tree[a].c=<span class="number">-1</span>,tree[x].c=<span class="number">0</span>,tree[w].c=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(val&gt;tree[u].val)&#123;</span><br><span class="line">tree[u].rs=<span class="built_in">del</span>(tree[u].rs,val);</span><br><span class="line"><span class="keyword">if</span>(tree[x].c==<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="type">int</span> ls=tree[u].ls;</span><br><span class="line"><span class="keyword">if</span>(tree[a].c&amp;&amp;!tree[b].c&amp;&amp;!tree[c].c) tree[a].c=tree[x].c=<span class="number">0</span>,tree[w].c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tree[b].c) u=<span class="built_in">L</span>(u),tree[b].c=tree[x].c=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tree[c].c)&#123;</span><br><span class="line">tree[a].ls=<span class="built_in">R</span>(ls);</span><br><span class="line">u=<span class="built_in">L</span>(a),tree[w].c=tree[x].c=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tree[ls].c)&#123;</span><br><span class="line">u=<span class="built_in">L</span>(u);</span><br><span class="line"><span class="keyword">if</span>(!tree[tree[c].ls].c&amp;&amp;!tree[tree[c].rs].c) tree[a].c=tree[x].c=<span class="number">0</span>,tree[c].c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tree[tree[c].ls].c) tree[w].rs=<span class="built_in">L</span>(a),tree[tree[c].ls].c=tree[x].c=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">tree[a].ls=<span class="built_in">R</span>(c);</span><br><span class="line">tree[w].rs=<span class="built_in">L</span>(a),tree[c].c=tree[x].c=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> tree[a].c=<span class="number">-1</span>,tree[x].c=<span class="number">0</span>,tree[w].c=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;op,&amp;num);</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">1</span>)&#123;</span><br><span class="line">tree[++ct].val=num;tree[ct].c=<span class="number">1</span>;</span><br><span class="line">root=<span class="built_in">insert</span>(root);</span><br><span class="line">tree[root].c=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">2</span>)&#123;</span><br><span class="line">root=<span class="built_in">del</span>(root,num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">print</span>(root);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单测试了一下，应该没什么问题</p><p><s>写完后，感觉手里的Splay树模板一下子变可爱了</s></p><h2 id="B-树">B+ 树</h2><p>感觉无论是修佬的笔记还是讲义，关于B+树讲的都不是很细，可能是因为这个知识点不太重要？那我也简单带过好了。</p><p>下面主要参考了 <a href="https://next.oi-wiki.org/ds/bplus-tree/#%E5%BC%95%E5%85%A5">B+ 树 - OI Wiki</a> 里的内容以及<a href="https://blog.csdn.net/Daydream_maker/article/details/145439590">CSDN上的这篇博客</a>（其实大部分是照搬，懒得改了</p><h3 id="性质">性质</h3><p>一个 <em>m</em> 阶的B+树有以下性质：</p><ol><li>每一个节点最多有 <em>m</em> 个子节点；每一个非叶子节点（除根节点）最少有 ⌈<em>m</em>/2⌉ 个子节点，如果根节点不是叶子节点，那么它至少有两个子节点</li><li>有 <em>k</em> 个子节点的非叶子节点拥有 <em>k</em> − 1 个键</li><li>所有的叶子节点都在同一层，所有的键值对（即数据记录）都存储在叶子节点中，非叶子节点仅存储键（索引）用于路由</li><li>所有的叶子节点通过指针连接成一个有序链表，便于范围查询和顺序访问</li></ol><h3 id="查找">查找</h3><p>从根节点开始，从上到下递归地遍历树。在每一层上，搜索的范围被减小到包含搜索值的子树中。</p><p>需要注意的是，在查找时，若非叶子节点上的关键字等于给定值，并不终止，而是继续向下直到叶子节点。因此，在 B+ 树中，不管查找成功与否，每次查找都是走了一条从根到叶子节点的路径。其余同 B 树的查找类似。</p><h3 id="插入-2">插入</h3><p>插入后，若当前节点关键字的个数小于 <em>m</em>，则插入结束。否则将这个叶子节点分裂成左右两个叶子节点，左叶子节点包含前 <em>m/2</em> 个记录，右节点包含剩下的记录，将第 <em>m/2 +1</em> 个记录的关键字进位到父节点中。</p><p>对于内部节点：若当前节点关键字的个数小于等于 <em>m</em> ，则插入结束。否则，将这个节点分裂成两个节点，左索引节点包含前 <em>(m - 1) / 2</em> 个 key，右节点包含 <em>m - (m - 1) / 2</em> 个 key，将第 <em>m /2</em> 个关键字进位到父节点中，然后重复这一步。</p><h3 id="删除-2">删除</h3><ol><li>首先查询到键值所在的叶子节点，删除该叶子节点的数据。</li><li>如果删除叶子节点之后的数据数量，满足 B+ 树的平衡条件，则直接返回。</li><li>否则，就需要做平衡操作：如果该叶子节点的左右兄弟节点的数据量可以借用，就借用过来满足平衡条件。否则，就与相邻的兄弟节点合并成一个新的子节点了。</li><li>在上面平衡操作中，如果是进行了合并操作，就需要向上修正父节点的指针：删除被合并节点的键值以及指针。</li><li>由于做了删除操作，可能父节点也会不平衡，那么就按照前面的步骤也对父节点进行重新平衡操作，这样一直到某个节点平衡为止。</li></ol><p>由于我不是很擅长用指针，而这种数据结构用指针实现更方便，就不给出代码了（主要是写个红黑树已经把我燃尽了），如果需要可以看<a href="https://blog.csdn.net/Daydream_maker/article/details/145439590">CSDN上的这篇博客</a>，虽然涉及到了C++里的“类”，但原理还是能看得懂大概的。</p>]]></content>
      
      
      <categories>
          
          <category> 课程笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ADS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计组-第一章</title>
      <link href="/2025/09/07/co-1/"/>
      <url>/2025/09/07/co-1/</url>
      
        <content type="html"><![CDATA[<p>看着教材随便写写，权当预习，不一定是重点，部分 <s>抄袭</s> 借鉴了<a href="https://xuan-insr.github.io/computer_organization/"><strong>咸鱼暄的代码空间</strong></a>里的笔记</p><h2 id="Eight-Great-Ideas-in-Computer-Architecture">Eight Great Ideas in Computer Architecture</h2><h3 id="Moore’s-Law">Moore’s Law</h3><p><strong>摩尔定理</strong>：集成电路上可容纳的晶体管数目，每隔 18-24 个月会增加一倍</p><h3 id="Abstraction-to-Simplify-Design">Abstraction to Simplify Design</h3><p><strong>抽象化设计</strong>：为提高效率，把设计分为不同的层次，低层次设计作为模块在高层次设计中被使用</p><h3 id="Make-the-Common-Case-Fast">Make the Common Case Fast</h3><p><strong>加速大概率事件</strong></p><h3 id="Performance-via-Parallelism">Performance via Parallelism</h3><p><strong>并行以提高性能</strong></p><h3 id="Performance-via-Pipelining">Performance via Pipelining</h3><p><strong>流水线提高性能</strong>：每个流程同时进行，只不过每一个流程工作的对象是时间上相邻的若干产品</p><h3 id="Performance-via-Prediction">Performance via Prediction</h3><p><strong>预测以提高性能</strong>：例如先当作 <code>if()</code> 条件成立，执行完内部内容，如果后来发现确实成立，那么直接 apply。我记得好像数逻课上讲加法器时提过这种思路，不过这种思路也只适合类似verilog这种并行的情况，不适合C这种串行的情况</p><h3 id="Hierarchy-of-Memories">Hierarchy of Memories</h3><p><strong>存储器层次</strong>：快的、小的、贵的储存器放在顶层，慢的、大的、便宜的储存器放在底层。对应的层级关系（由低到高）：Disk / Tape -&gt; Main Memory(DRAM) -&gt; L2-Cache(SRAM) -&gt; L1-Cache(On-Chip) -&gt; Registers</p><h3 id="Dependability-via-Redundancy">Dependability via Redundancy</h3><p><strong>冗余以提高可靠性</strong></p><h2 id="Below-Your-Program">Below Your Program</h2><p>在我看来，主要是两个层级，强调了Abstraction的概念</p><h3 id="硬件与软件间层级关系">硬件与软件间层级关系</h3><p>Application software -&gt; System software -&gt; Hardware</p><p>其中 System software 主要有 operating system 和 complier 两种</p><p>Operating system 有分配内存、处理输入输出、协同不同程序的同时运行等功能</p><p>Complier 负责将高级语言编译为汇编语言</p><h3 id="高级语言与机器语言间层级关系">高级语言与机器语言间层级关系</h3><p>High-level programing language -&gt; Assembly language -&gt; Machine language</p><h2 id="Under-the-Covers">Under the Covers</h2><p>这一节分别介绍了计算机的五大组成部分：Input, output, memory, datapath, control</p><p><img src="/image/co_pic/components.png" alt="components"></p><p>这一节拓展内容比较多，篇幅也比较长，先丢个教材上的图在这里，如果学糊涂了可以回来看看</p><h3 id="I-O-devices">I/O devices</h3><p>主要介绍了 <strong>LCD</strong>（液晶显示器）和 <strong>Touchscreen</strong>（触摸屏）的原理，权当物理科普看了，应该不重要</p><p>可以顺便学学英语：<code>resolution: 分辨率</code>，<code>subtle: 不易察觉的</code>，<code>capacitive: 电容的</code></p><h3 id="Processor">Processor</h3><p>忍不住提一句：教材上有几张图，关于Apple iPad 2由宏观到微观的拆解，可以结合图片下面的注释看看，还挺有意思的</p><p>闲话少说，我们来澄清几个概念：</p><ol><li><strong>intergrated circuit</strong> 其实就是 <strong>chip</strong>，由 <strong>transisitors</strong> 组成</li><li><strong>processor</strong>其实就是 <strong>CPU(central processor unit)</strong>，本质上还是 <strong>intergrated circuit</strong></li><li><strong>processor</strong> 包含计算机的两大部分—— <strong>datapath</strong> 和 <strong>control</strong>，前者负责 performs arithmetic operations，后者负责控制计算机其它四个部分</li></ol><h3 id="Memory">Memory</h3><p>在数逻课上好像学过一点，不过忘得差不多了</p><p>把我比较在意的几个点列一下：</p><ol><li><strong>Memory</strong> 是用来储存 <strong>programs</strong> 和 <strong>data</strong> 的地方，本质上还是 <strong>intergrated circuit</strong></li><li><strong>Memory</strong> 可以分为 <strong>volatile</strong> 和 <strong>nonvolatile</strong> 两种，前者用于 <strong>main memory</strong> (also <strong>primary memory</strong>) ，后者用于 <strong>secondary memory</strong></li><li><strong>Main memory</strong> 主要采用 <strong>DRAMs</strong>； <strong>Secondary memory</strong> 主要采用 <strong>magnetic disks</strong> 和 <strong>flash memory</strong>，PMDs主要采用 <strong>flash memory</strong>，因其体积更小</li><li><strong>Cache memory</strong>（缓存） 存在于 <strong>processor</strong> 中，采用的是 <strong>SRAM</strong>，比外部的 <strong>DRAM</strong> 跑的更快</li><li>重温一下 <strong>SRAM</strong> 和 <strong>DRAM</strong>，前者为静态（<strong>static</strong>），后者为动态（<strong>dynamic</strong>），后者成本更低，所以广泛使用于 <strong>Main memory</strong> 中；<strong>RAM</strong> (<strong>random access memory</strong>) 指的是，相比于 <strong>sequential access memories</strong>，<strong>RAM</strong> 可以做到用相同的时间访问到内部任何一部分的内存</li></ol><h3 id="ISA-and-ABI">ISA and ABI</h3><p>教材在讲 memory 时插入了这两个抽象的概念，不知道放哪所以丢在这里了</p><h4 id="ISA-instruction-set-architecture">ISA ( instruction set architecture )</h4><p>简称 architecture，翻译为指令集架构，被定义为 hardware 与 the lowest-level software 之间的 abstract interface。据教材所述，architecture 包含了书写机器语言程序所需的所有信息，所以它其实是个信息集？</p><p>嗯，不懂捏~ o(￣▽￣)o</p><p>不过从后面的举例来看，architecture 的作用似乎是让我们可以脱离在硬件层面的叙述方式，可以从更高的维度解决问题，以提高效率。如果是这样，那么应该可以把上文的 interface 理解为提高 hierarchy 所需的知识。</p><h4 id="ABI-application-binary-interface">ABI ( application binary interface )</h4><p>ABI 被定义为指令集和操作系统所提供接口的组合，类似于一套 application programmers 的操作规范。所以这和上面的 ISA 有什么关系？</p><p>嗯，无所谓啦~ o(￣▽￣)o</p><p>仔细想想，似乎上面的 ISA 指的是抽象的知识，而 ABI 指的是具体的操作方法。</p><p>额，还是莫名其妙的。。。</p><h3 id="computer-networks">computer networks</h3><p>主要在讲 network 的发展史，感觉没什么内容，略过</p><h2 id="Technologies-for-Building-Processors-and-Memory">Technologies for Building Processors and Memory</h2><p>这一节主要在介绍制造芯片的流程</p><p><img src="/image/co_pic/manufacture.png" alt="manufacture"></p><p>具体概念不说了，稍微吐槽一下，为什么切下来的薄片要叫 <strong>dies</strong> 这个听上去不怎么吉利的词</p><p>成本计算的三个等式，感觉不重要，不过看学长的博客里好像有，也贴一下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mi>o</mi><mi>s</mi><mi>t</mi><mi mathvariant="normal">_</mi><mi>p</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>d</mi><mi>i</mi><mi>e</mi><mo>=</mo><mfrac><mrow><mi>C</mi><mi>o</mi><mi>s</mi><mi>t</mi><mi mathvariant="normal">_</mi><mi>p</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>w</mi><mi>a</mi><mi>f</mi><mi>e</mi><mi>r</mi></mrow><mrow><mi>D</mi><mi>i</mi><mi>e</mi><mi>s</mi><mi mathvariant="normal">_</mi><mi>p</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>w</mi><mi>a</mi><mi>f</mi><mi>e</mi><mi>r</mi><mo>×</mo><mi>y</mi><mi>i</mi><mi>e</mi><mi>l</mi><mi>d</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mi>D</mi><mi>i</mi><mi>e</mi><mi>s</mi><mi mathvariant="normal">_</mi><mi>p</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>w</mi><mi>a</mi><mi>f</mi><mi>e</mi><mi>r</mi><mo>≈</mo><mfrac><mrow><mi>W</mi><mi>a</mi><mi>f</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>a</mi></mrow><mrow><mi>D</mi><mi>i</mi><mi>e</mi><mi mathvariant="normal">_</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>a</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mi>Y</mi><mi>i</mi><mi>e</mi><mi>l</mi><mi>d</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mi>D</mi><mi>e</mi><mi>f</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">_</mi><mi>p</mi><mi>e</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>a</mi><mo>×</mo><mi>D</mi><mi>i</mi><mi>e</mi><mi mathvariant="normal">_</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>a</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">Cost\_per\_die = \frac{Cost\_per\_wafer}{Dies\_per\_wafer\times yield}\\Dies\_per\_wafer \approx \frac{Wafer\_area}{Die\_area}\\Yield=\frac{1}{(1+(Defects\_per\_area \times Die\_area/2))^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">os</span><span class="mord mathnormal">t</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3904em;vertical-align:-0.996em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3944em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal">es</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">i</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">os</span><span class="mord mathnormal">t</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.996em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal">es</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3904em;vertical-align:-0.996em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3944em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal">e</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">Wa</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.996em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">Yi</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3174em;vertical-align:-0.996em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal">De</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">ec</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal">e</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">a</span><span class="mord">/2</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.996em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>第三个等式据说是根据经验拟合的公式，嗯，有点迷，为什么要用 Defect per area 这个变量去算 Yield？Yield 不是有定义么？</p><h2 id="Performance">Performance</h2><p>篇幅整的老长，一看，又没什么真东西</p><p>中间有几道习题，也是老长老长的，仔细一看，却只有小学二年级水平，(ˉ▽ˉ；)…</p><p>引用学长博客里的锐评：</p><p><img src="/image/co_pic/comments.png" alt="comments"></p><p>罢了罢了，我们还是了解一下里面的一些概念</p><h3 id="Metrics">Metrics</h3><p><strong>Response time ( execution time, wall clock time, elapsed time )</strong>：完成一个任务所用时间</p><p><strong>Throughput ( bandwidth )</strong>：单位时间内完成任务的量</p><p><strong>CPU execution time ( CPU time )</strong>：完成一个任务占用的 CPU 时间，可分为 <strong>user CPU time</strong> 和 <strong>system CPU time</strong>，不过二者通常难以严格区分</p><p><strong>System performance</strong>：指的是在无其它负载系统上的 Response time</p><p><strong>CPU performance</strong>：指的是 user CPU time</p><p><strong>clock cycles ( clock periods, clock ticks )</strong>：processor 中有一个周期运动的时钟，<strong>clock cycles</strong> 指的是时钟的一个周期，<strong>clock rate</strong> 指的是周期的倒数，即频率</p><p><strong>clock cycles per instruction ( CPI )</strong>：完成一条指令所需的平均时钟周期</p><h3 id="Equation">Equation</h3><p>前面部分的等式就不列举了，因为只有小学二年级水平</p><p>只介绍一个教材上强调的等式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mi>P</mi><mi>U</mi><mtext> </mtext><mi>t</mi><mi>i</mi><mi>m</mi><mi>e</mi><mo>=</mo><mi>I</mi><mi>n</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi><mo>×</mo><mi>C</mi><mi>P</mi><mi>I</mi><mo>×</mo><mi>C</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>k</mi><mtext> </mtext><mi>p</mi><mi>e</mi><mi>r</mi><mi>i</mi><mi>o</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">CPU\ time=Instructioncount\times CPI \times Clock\ period </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">CP</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace"> </span><span class="mord mathnormal">t</span><span class="mord mathnormal">im</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">co</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">CP</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">Cl</span><span class="mord mathnormal">oc</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace"> </span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span></span></span></span></span></p><p>或者写作：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi>S</mi><mi>e</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>d</mi><mi>s</mi></mrow><mrow><mi>P</mi><mi>r</mi><mi>o</mi><mi>g</mi><mi>r</mi><mi>a</mi><mi>m</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>I</mi><mi>n</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi>s</mi></mrow><mrow><mi>P</mi><mi>r</mi><mi>o</mi><mi>g</mi><mi>r</mi><mi>a</mi><mi>m</mi></mrow></mfrac><mo>×</mo><mfrac><mrow><mi>C</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>k</mi><mtext> </mtext><mi>c</mi><mi>y</mi><mi>c</mi><mi>l</mi><mi>e</mi><mi>s</mi></mrow><mrow><mi>I</mi><mi>n</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>u</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi>s</mi></mrow></mfrac><mo>×</mo><mfrac><mrow><mi>S</mi><mi>e</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>d</mi><mi>s</mi></mrow><mrow><mi>C</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>k</mi><mtext> </mtext><mi>c</mi><mi>y</mi><mi>c</mi><mi>l</mi><mi>e</mi><mi>s</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{Seconds}{Program} = \frac{Instructions}{Program} \times \frac{Clock\ cycles}{Instructions} \times \frac{Seconds}{Clock\ cycles}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.2519em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">ro</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">am</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">eco</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mord mathnormal">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2408em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">ro</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">am</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">Cl</span><span class="mord mathnormal">oc</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace"> </span><span class="mord mathnormal">cyc</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">es</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.2519em;vertical-align:-0.8804em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">Cl</span><span class="mord mathnormal">oc</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace"> </span><span class="mord mathnormal">cyc</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">es</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">eco</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mord mathnormal">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>这个等式很好理解，知道了 CPI 的含义三年级小学生也可以自己推出来，但为什么说它很重要呢？</p><p>简要概括一下原因，就是这个等式右边的三个影响因素都很有实际意义，类似于三个“源头”， CPU time 的 performance 就是在这三个相对独立的元素之间的 tradeoff 中决定的</p><p>多说无益，下一节吧</p><h2 id="The-Power-Wall">The Power Wall</h2><p>从这一节开始<a href="https://xuan-insr.github.io/computer_organization/"><strong>咸鱼暄的代码空间</strong></a>就没内容了，看来后面几节也不是那么重要</p><p>但为了完整性，我还是会过一遍，接下来可能会借鉴这两位大佬的笔记：<a href="https://note.noughtq.top/system/co/"><strong>NoughtQ的笔记本</strong></a>，<a href="https://mem.ac/course/co/note/1/"><strong>mem 的小站</strong></a></p><p>这一节在讲“功耗墙”的问题，先丢一个公式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi><mo>∝</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo>×</mo><mi>C</mi><mi>a</mi><mi>p</mi><mi>a</mi><mi>c</mi><mi>i</mi><mi>t</mi><mi>i</mi><mi>v</mi><mi>e</mi><mtext> </mtext><mi>l</mi><mi>o</mi><mi>a</mi><mi>d</mi><mo>×</mo><mi>V</mi><mi>o</mi><mi>l</mi><mi>t</mi><mi>a</mi><mi>g</mi><msup><mi>e</mi><mn>2</mn></msup><mo>×</mo><mi>F</mi><mi>r</mi><mi>e</mi><mi>q</mi><mi>u</mi><mi>e</mi><mi>n</mi><mi>c</mi><mi>y</mi><mtext> </mtext><mi>s</mi><mi>w</mi><mi>i</mi><mi>t</mi><mi>c</mi><mi>h</mi><mi>e</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">Power \propto 1/2 \times Capacitive\ load \times Voltage^2 \times Frequency\ switched </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∝</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">a</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0585em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal">o</span><span class="mord mathnormal">lt</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">re</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">cy</span><span class="mspace"> </span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span></span></span></span></span></p><p>如果想减少功耗，就得从上面三个方向出发。Capacitive load 意为“电容负载”，与 fanout 等因素有关。同时，Leakage 也是导致功耗增大的主要因素。</p><h2 id="The-Switch-from-Uniprocessors-to-Multiprocessors">The Switch from Uniprocessors to Multiprocessors</h2><p>这一节没什么内容，主要在说单核处理器到多核处理器的迭代带来了编程方面的挑战</p><p><a href="https://note.noughtq.top/system/co/1">NoughtQ的笔记本</a>上概括的挺好的</p><h2 id="Real-Stuff-Benchmarking-the-Intel-Core-i7">Real Stuff: Benchmarking the Intel Core i7</h2><p>主要在讲评估计算机 Performancce 的具体方法</p><p><strong>Benchmark</strong>：用来评估计算机性能的一个程序</p><p><strong>workload</strong>：一套用来评估计算机性能的程序，通常会指定时钟频率</p><p><strong>SPEC (System Performance Evaluation Cooperative)</strong> ：SPEC 建立了一系列用于评估计算机系统的 Benchmarks 和 performance evalution tools，是国际公认的计算机评估标准</p><p>教材上说 SPEC 公布的最新CPU测试程序是 SPEC CPU2006，我在wiki上查了一下，最新版本似乎是 SPEC CPU 2017，可见这教材也有些年代了</p><p>SPEC 除了可以测试计算机的速度，还可以评估计算机的能耗</p><h2 id="Fallacies-and-Pitfalls">Fallacies and Pitfalls</h2><p>这一节依然可以参考<a href="https://note.noughtq.top/system/co/1">NoughtQ的笔记本</a>上的内容，虽然感觉他的翻译有些小问题</p><p>一共四个陷阱/谬误（下面都是错的）：</p><ol><li>改进计算机的一个方面能够成比例地提高整体性能</li><li>电脑空闲的时候耗不了多少电</li><li>性能和能耗在设计时是互不相干的两个因素</li><li>仅使用 the clock rate, instruction count, CPI 中的一种或两种去评估计算机性能</li></ol><p><strong>后记：</strong> 教材后面有个总结的章节，可以一看，再后面是一些历史故事，还有习题（也许老师会布置？），感觉没有看的价值，就这样吧</p>]]></content>
      
      
      <categories>
          
          <category> 课程笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADS_Lecture 1</title>
      <link href="/2025/09/07/ads-1/"/>
      <url>/2025/09/07/ads-1/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>​        其实我原来是不想给 ADS 写笔记的，自从在短学期中认识到了自己的渺小，我就不想接触太多和算法有关的东西了。我曾引以为傲的，现在看来似乎不值一提。倒也不是说很悲伤，我反倒庆幸自己早早发现了这个事实。做个普通人也不错吧，或许普通才是最好的选择。</p><p>​既然梦醒了，我也该回归现实了。既然 ADS 是一门硬课，那我有什么理由不写笔记呢？如果有，就请原谅我吧。</p><p>​        我看各位学长的笔记似乎与教材上的顺序有所出入，我也懒得翻教材了。</p><p>​        参考的资料：<a href="https://media.githubusercontent.com/media/NoughtQ/ZJU-Courses-Resources/refs/heads/main/ADS-D2QD/2024%E6%98%A5%E5%A4%8FADS%E8%AE%B2%E4%B9%89-wyy.pdf?download=true">忘记从哪来找的讲义</a>，<a href="https://note.isshikih.top/cour_note/D2CX_AdvancedDataStructure/Lec01/"><strong>Isshiki修’s Notebook</strong></a></p><h2 id="AVL-树">AVL 树</h2><p>我看 <a href="https://note.isshikih.top/cour_note/D2CX_AdvancedDataStructure/Lec01/"><strong>Isshiki修’s Notebook</strong></a> 上写的挺好，所以我就不多说了</p><p>我记得我高二的时候试着写过一次 AVL 树的模板，当时只是感觉好玩，边看教材边写，写了一百多行，花了几乎一整节晚自习，所幸教材给的代码没什么差错。那还是我第一次写那么长的代码，我还把那个代码保存在了U盘里，不知道后来有没有给我删掉，不过那个U盘被遗弃在我曾经的家中，现在也拿不到就是了。</p><p>时隔近3年，我看看我能不能自己写出来。</p><p>先写一个普通的二叉搜索树：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"><span class="type">int</span> val,h;</span><br><span class="line"><span class="type">int</span> ls,rs;</span><br><span class="line">&#125;tree[N];</span><br><span class="line"><span class="type">int</span> n,op,root,ct,num;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!u) <span class="keyword">return</span> ct;</span><br><span class="line"><span class="keyword">if</span>(num&lt;=tree[u].val) tree[u].ls=<span class="built_in">insert</span>(tree[u].ls);</span><br><span class="line"><span class="keyword">else</span> tree[u].rs=<span class="built_in">insert</span>(tree[u].rs);</span><br><span class="line">tree[u].h=<span class="built_in">max</span>(tree[tree[u].ls].h,tree[tree[u].rs].h)<span class="number">+1</span>;</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!u) <span class="keyword">return</span>;</span><br><span class="line"><span class="built_in">print</span>(tree[u].ls);<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,tree[u].val);<span class="built_in">print</span>(tree[u].rs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!tree[u].rs) <span class="keyword">return</span> u;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">find</span>(tree[u].rs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">del</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!u) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(val==tree[u].val)&#123;</span><br><span class="line"><span class="keyword">if</span>(tree[u].ls==<span class="number">0</span>&amp;&amp;tree[u].rs==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(tree[u].ls!=<span class="number">0</span>&amp;&amp;tree[u].rs==<span class="number">0</span>) <span class="keyword">return</span> tree[u].ls;</span><br><span class="line"><span class="keyword">if</span>(tree[u].ls==<span class="number">0</span>&amp;&amp;tree[u].rs!=<span class="number">0</span>) <span class="keyword">return</span> tree[u].rs;</span><br><span class="line"><span class="type">int</span> v=<span class="built_in">find</span>(tree[u].ls);</span><br><span class="line">tree[u].val=tree[v].val;</span><br><span class="line">tree[u].ls=<span class="built_in">del</span>(tree[u].ls,tree[v].val);</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(val&lt;tree[u].val) tree[u].ls=<span class="built_in">del</span>(tree[u].ls,val);</span><br><span class="line"><span class="keyword">else</span> tree[u].rs=<span class="built_in">del</span>(tree[u].rs,val);</span><br><span class="line">tree[u].h=<span class="built_in">max</span>(tree[tree[u].ls].h,tree[tree[u].rs].h)<span class="number">+1</span>;</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;op,&amp;num);</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">1</span>)&#123;</span><br><span class="line">tree[++ct].val=num;</span><br><span class="line">tree[ct].h=<span class="number">1</span>;</span><br><span class="line">root=<span class="built_in">insert</span>(root);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">2</span>)&#123;</span><br><span class="line">root=<span class="built_in">del</span>(root,num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">print</span>(root);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="comment">//自己写了一些sample用来测试，似乎没什么问题</span></span><br></pre></td></tr></table></figure><p>写了个insert函数和delete函数，省去测试用的main函数其实也就40行</p><p>普通二叉搜索树在一些极端情况下会退化成“链式结构”，导致操作的效率低下；AVL 树虽然操作更为复杂，但拥有稳定的性能。</p><p>相比于普通二叉搜索树，AVL 树增加了“调整平衡”这个步骤，详见下面的adjust函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"><span class="type">int</span> val,h;</span><br><span class="line"><span class="type">int</span> ls,rs;</span><br><span class="line">&#125;tree[N];</span><br><span class="line"><span class="type">int</span> n,op,root,ct,num;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">adjust</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> l=tree[u].ls,r=tree[u].rs;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">abs</span>(tree[l].h-tree[r].h)&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">tree[u].h=<span class="built_in">max</span>(tree[tree[u].ls].h,tree[tree[u].rs].h)<span class="number">+1</span>;</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(tree[l].h&gt;tree[r].h)&#123;</span><br><span class="line"><span class="keyword">if</span>(tree[tree[l].ls].h&gt;tree[tree[l].rs].h)&#123;</span><br><span class="line">tree[u].ls=tree[l].rs;tree[l].rs=u;</span><br><span class="line">tree[u].h=<span class="built_in">max</span>(tree[tree[u].ls].h,tree[tree[u].rs].h)<span class="number">+1</span>;</span><br><span class="line">tree[l].h=<span class="built_in">max</span>(tree[tree[l].ls].h,tree[tree[l].rs].h)<span class="number">+1</span>;</span><br><span class="line"><span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="type">int</span> rt=tree[l].rs;</span><br><span class="line">tree[l].rs=tree[rt].ls;tree[u].ls=tree[rt].rs;tree[rt].ls=l;tree[rt].rs=u;</span><br><span class="line">tree[l].h=<span class="built_in">max</span>(tree[tree[l].ls].h,tree[tree[l].rs].h)<span class="number">+1</span>;</span><br><span class="line">tree[u].h=<span class="built_in">max</span>(tree[tree[u].ls].h,tree[tree[u].rs].h)<span class="number">+1</span>;</span><br><span class="line">tree[rt].h=<span class="built_in">max</span>(tree[tree[rt].ls].h,tree[tree[rt].rs].h)<span class="number">+1</span>;</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(tree[tree[r].ls].h&lt;tree[tree[r].rs].h)&#123;</span><br><span class="line">tree[u].rs=tree[r].ls;tree[r].ls=u;</span><br><span class="line">tree[u].h=<span class="built_in">max</span>(tree[tree[u].ls].h,tree[tree[u].rs].h)<span class="number">+1</span>;</span><br><span class="line">tree[r].h=<span class="built_in">max</span>(tree[tree[r].ls].h,tree[tree[r].rs].h)<span class="number">+1</span>;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="type">int</span> rt=tree[r].ls;</span><br><span class="line">tree[u].rs=tree[rt].ls;tree[r].ls=tree[rt].ls;tree[rt].ls=u;tree[rt].rs=r;</span><br><span class="line">tree[u].h=<span class="built_in">max</span>(tree[tree[u].ls].h,tree[tree[u].rs].h)<span class="number">+1</span>;</span><br><span class="line">tree[r].h=<span class="built_in">max</span>(tree[tree[r].ls].h,tree[tree[r].rs].h)<span class="number">+1</span>;</span><br><span class="line">tree[rt].h=<span class="built_in">max</span>(tree[tree[rt].ls].h,tree[tree[rt].rs].h)<span class="number">+1</span>;</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!u) <span class="keyword">return</span> ct;</span><br><span class="line"><span class="keyword">if</span>(num&lt;=tree[u].val) tree[u].ls=<span class="built_in">insert</span>(tree[u].ls);</span><br><span class="line"><span class="keyword">else</span> tree[u].rs=<span class="built_in">insert</span>(tree[u].rs);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">adjust</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!u) <span class="keyword">return</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,tree[u].val);<span class="built_in">print</span>(tree[u].ls);<span class="built_in">print</span>(tree[u].rs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!tree[u].rs) <span class="keyword">return</span> u;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">find</span>(tree[u].rs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">del</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!u) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(val==tree[u].val)&#123;</span><br><span class="line"><span class="keyword">if</span>(tree[u].ls==<span class="number">0</span>&amp;&amp;tree[u].rs==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(tree[u].ls!=<span class="number">0</span>&amp;&amp;tree[u].rs==<span class="number">0</span>) <span class="keyword">return</span> tree[u].ls;</span><br><span class="line"><span class="keyword">if</span>(tree[u].ls==<span class="number">0</span>&amp;&amp;tree[u].rs!=<span class="number">0</span>) <span class="keyword">return</span> tree[u].rs;</span><br><span class="line"><span class="type">int</span> v=<span class="built_in">find</span>(tree[u].ls);</span><br><span class="line">tree[u].val=tree[v].val;</span><br><span class="line">tree[u].ls=<span class="built_in">del</span>(tree[u].ls,tree[v].val);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">adjust</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(val&lt;tree[u].val) tree[u].ls=<span class="built_in">del</span>(tree[u].ls,val);</span><br><span class="line"><span class="keyword">else</span> tree[u].rs=<span class="built_in">del</span>(tree[u].rs,val);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">adjust</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;op,&amp;num);</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">1</span>)&#123;</span><br><span class="line">tree[++ct].val=num;</span><br><span class="line">tree[ct].h=<span class="number">1</span>;</span><br><span class="line">root=<span class="built_in">insert</span>(root);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">2</span>)&#123;</span><br><span class="line">root=<span class="built_in">del</span>(root,num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">print</span>(root);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="comment">//同样简单测试了一番，没考虑太多情况，不一定完全正确</span></span><br></pre></td></tr></table></figure><p>包括main函数一共95行，比我高二的时候简洁不少，看来我也有些许进步</p><p>对比不难发现，AVL 树无非是在插入和删除操作时增加了调整平衡的步骤，调整平衡分四种情况，建议画图来辅助理解。</p><h2 id="Splay-树">Splay 树</h2><p>从 <a href="https://note.isshikih.top/cour_note/D2CX_AdvancedDataStructure/Lec01/#splay-%E6%A0%91"><strong>Isshiki修’s Notebook</strong></a> 上截下来的：</p><p><img src="/image/ads_pic/analogy" alt=""></p><p>这不是我们星铁的玉兆吗？下次记得表明出处</p><p><s>我再也不玩抽象了</s></p><p>咳咳，说起来，我还真没写过Splay树的代码，我记得算法书上有一题Splay树的例题，但那题也可以用FHQ-Treap树来写，而且后者更简单。</p><p>对的，Splay树也很难写，和AVL树是同一个级别的（话说第一讲为什么要放这两大爹）</p><p>我也尝试写一下模板吧</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"><span class="type">int</span> val;</span><br><span class="line"><span class="type">int</span> ls,rs;</span><br><span class="line">&#125;tree[N];</span><br><span class="line"><span class="type">int</span> n,op,root,ct,num;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">L</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> ls=tree[u].ls;</span><br><span class="line">tree[u].ls=tree[ls].rs;tree[ls].rs=u;</span><br><span class="line"><span class="keyword">return</span> ls;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">R</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> rs=tree[u].rs;</span><br><span class="line">tree[u].rs=tree[rs].ls;tree[rs].ls=u;</span><br><span class="line"><span class="keyword">return</span> rs;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">rise</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(tree[u].val==num) <span class="keyword">return</span> u;</span><br><span class="line"><span class="keyword">if</span>(num&lt;tree[u].val)&#123;</span><br><span class="line"><span class="type">int</span> ls=tree[u].ls=<span class="built_in">rise</span>(tree[u].ls);</span><br><span class="line"><span class="keyword">if</span>(tree[ls].val==num&amp;&amp;u==root) u=<span class="built_in">L</span>(u);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tree[tree[ls].ls].val==num) u=<span class="built_in">L</span>(<span class="built_in">L</span>(u));</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tree[tree[ls].rs].val==num)&#123;tree[u].ls=<span class="built_in">R</span>(ls);u=<span class="built_in">L</span>(u);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="type">int</span> rs=tree[u].rs=<span class="built_in">rise</span>(tree[u].rs);</span><br><span class="line"><span class="keyword">if</span>(tree[rs].val==num&amp;&amp;u==root) u=<span class="built_in">R</span>(u);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tree[tree[rs].rs].val==num) u=<span class="built_in">R</span>(<span class="built_in">R</span>(u));</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tree[tree[rs].ls].val==num)&#123;tree[u].rs=<span class="built_in">L</span>(rs);u=<span class="built_in">R</span>(u);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!u) <span class="keyword">return</span> ct;</span><br><span class="line"><span class="keyword">if</span>(num&lt;=tree[u].val) tree[u].ls=<span class="built_in">insert</span>(tree[u].ls);</span><br><span class="line"><span class="keyword">else</span> tree[u].rs=<span class="built_in">insert</span>(tree[u].rs);</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!u) <span class="keyword">return</span>;</span><br><span class="line"><span class="built_in">print</span>(tree[u].ls);<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,tree[u].val);<span class="built_in">print</span>(tree[u].rs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">del</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> &amp;t)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!tree[u].rs)&#123;</span><br><span class="line">t=u;</span><br><span class="line"><span class="keyword">if</span>(tree[u].ls) <span class="keyword">return</span> tree[u].ls;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">tree[u].rs=<span class="built_in">del</span>(tree[u].rs,t);</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">while</span>(n--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;op,&amp;num);</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">1</span>)&#123;</span><br><span class="line">tree[++ct].val=num;</span><br><span class="line">root=<span class="built_in">insert</span>(root);</span><br><span class="line">root=<span class="built_in">rise</span>(root);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">2</span>)&#123;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">root=<span class="built_in">rise</span>(root);</span><br><span class="line"><span class="keyword">if</span>(!tree[root].ls) root=tree[root].rs;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">del</span>(tree[root].ls,t);</span><br><span class="line">tree[root].val=tree[t].val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">print</span>(root);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;<span class="comment">//同样简单的验证过</span></span><br></pre></td></tr></table></figure><p>竟然比我想象的要好写很多，只有76行，也许是因为没维护height的原因，比AVL简单很多</p><p>可以发现，相比普通二叉平衡树，Splay树主要多了个 rise 操作，类似堆的上浮操作</p><p>无论是 zig-zag 的 double rotation，还是 zig-zig 的 single rotation，都可以分解为AVL树中的LL和RR操作（其实AVL的RL和LR操作也可以分解，只不过当时写的时候没想那么多）</p><h2 id="摊还分析">摊还分析</h2><p>摊还分析（Amortized Analysis），高中时就略有耳闻，不过当时以为其晦涩难懂，便打消了学习的念头。而今观之，亦不过如此也。</p><p>摊还分析下设三种方法：聚合法、核法、势能法</p><p>聚合（aggregate）法，顾名思义，先统计最坏情况下的所有操作的总用时（只需一个合适的上界），再除以总操作数，即可得单次操作的均摊复杂度。</p><p>核法，或称记账（accounting）法，先猜出平均值，再通过累计每一步的盈亏，判断可行性（先猜后证——“判断是非”往往比“直接求值”更高效，二分法也大多是这个原理）。</p><p>势能（potential）法，分三步：</p><ol><li>设计势能函数  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi (D_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>计算每一步的摊还代价  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>c</mi><mi>i</mi></msub><mo>^</mo></mover><mo>=</mo><msub><mi>c</mi><mi>i</mi></msub><mo>+</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{c_i}=c_i+\phi(D_i)-\phi(D_{i-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>累加得到  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo><mover accent="true"><msub><mi>c</mi><mi>i</mi></msub><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\sum \hat{c_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>，由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo><mover accent="true"><msub><mi>c</mi><mi>i</mi></msub><mo>^</mo></mover><mo>=</mo><mo>∑</mo><msub><mi>c</mi><mi>i</mi></msub><mo>+</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sum \hat{c_i}=\sum c_i+\phi(D_n)-\phi(D_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，只需保证 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>&gt;</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi(D_n)&gt;\phi(D_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，就能证明 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo><mover accent="true"><msub><mi>c</mi><mi>i</mi></msub><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\sum \hat{c_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span> 是操作的总用时 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\sum c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的上界，再除以总操作数，即可得单次操作的均摊复杂度。</li></ol><p>不难发现，势能法也可以说是一种聚合法，只不过前者用了一种很巧妙的方式去求聚合法中的“上界”</p><p>Splay 树的复杂度分析用的就是势能法，因为Splay第二步计算单步摊还代价时比较繁琐，所以看起来可能会比较复杂，但其实真的不难</p><p>具体的话可以去看<a href="https://note.isshikih.top/cour_note/D2CX_AdvancedDataStructure/Lec01/#%E6%91%8A%E8%BF%98%E5%88%86%E6%9E%90">Isshiki修’s Notebook</a>里的内容，里面有很多学长自己的思考，很有启发意义。如果想得到更深刻的认识，可以下载并阅读我在开头引用的讲义。</p>]]></content>
      
      
      <categories>
          
          <category> 课程笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ADS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces Round 1015 (Div1+Div2)</title>
      <link href="/2025/04/06/cf2025-4-6/"/>
      <url>/2025/04/06/cf2025-4-6/</url>
      
        <content type="html"><![CDATA[<p>同样是Codeforces比赛的题解，对应的是Round 1005，难度包含Div1和Div2</p><p>上午学vivado学的心态有点爆炸，这周只有一个下午的时间来写题解，我尽量简短些，看看能不能尽快赶出来</p><h2 id="A-Max-and-Mod">A. Max and Mod</h2><p>第一题一般比较简单，不涉及复杂数据结构，找到规律即可</p><p>考虑最后两位，它们之间必有除n余n-1之数，也就是有n-1，而且不能有n</p><p>再考虑倒数2, 3位，它们之间必有除n-1余n-2之数，也就是有n-2（在n较大的情况下n除n-1不会余n-2，其实只有3满足），不能有n-1，那么n-1必然在最后一位</p><p>以此类推，理想情况下，如果把n放在开头，序列应该这样排列：<code>n 1 2 ... n-2 n-1</code>，由此可见，n只要能被2除余1，也就是n为奇数，就一定有解</p><p>那么n为偶数就一定无解吗？如果n不在开头，又如何呢？按这种思路，应该得存在一个i，n+1应该得被 i 和 i+1 同时整除，也就是需要满足<code>n = k*i*(i+1)-1</code></p><p>不幸的是，这样的n只有奇数</p><p>那很简单了，只需在奇数时输出<code>n 1 2 ... n-2 n-1</code>，偶数时输出<code>-1</code></p><p>AC代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> n,t;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>)&#123; <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);<span class="keyword">continue</span>;&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++) <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>,i);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-MIN-GCD">B. MIN = GCD</h2><p>又是这种非常考验推理能力的题，说白了就是数学游戏</p><p>不难发现，左边min的值仅能为序列中最小值，否则左边肯定大于右边</p><p>那右边是那些数呢？其实可以很灵活，假设一开始只有最小值在左边，其它数在右边，整除不了丢左边就行。什么情况不符合呢？当右边的数都整除不了（你总不可能右边没数吧），以及都能整除而且gcd大于最小值</p><p>AC代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="type">int</span> t,n;</span><br><span class="line">ll a[<span class="number">100005</span>];</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll x,ll y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x%y==<span class="number">0</span>) <span class="keyword">return</span> y;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">gcd</span>(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++) <span class="keyword">if</span>(a[<span class="number">1</span>]&gt;a[i]) a[<span class="number">1</span>]^=a[i]^=a[<span class="number">1</span>]^=a[i];</span><br><span class="line">ll flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++) <span class="keyword">if</span>(a[i]%a[<span class="number">1</span>]==<span class="number">0</span>) flag=a[i];</span><br><span class="line"><span class="keyword">if</span>(!flag)&#123;<span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);<span class="keyword">continue</span>;&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++) <span class="keyword">if</span>(a[i]%a[<span class="number">1</span>]==<span class="number">0</span>) flag=<span class="built_in">gcd</span>(flag,a[i]);</span><br><span class="line"><span class="keyword">if</span>(flag==a[<span class="number">1</span>]) <span class="built_in">puts</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-You-Soared-Afar-With-Grace">C. You Soared Afar With Grace</h2><p>感觉难度上会略低于前两题（主要是很好想）</p><p>首先，让我们明确一下怎样的排序是无解的，不难发现，若ai=bj，则aj=bi，否则无解；而且ai=bi的情况也很危险，当出现一对，偶数n下无解，出现两对或以上，一定无解</p><p>剩下的情况应该是有解的，而且操作也不难想，此处略</p><p>丸辣！Wrong answer on test 2</p><p>题解的思路和我是一致的，具体操作也和我的类似，应该是细节处理有问题</p><p>把交换这步封装成一个函数以后就过了，看来还是得模块化，方便找问题</p><p>AC代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>;</span><br><span class="line"><span class="type">int</span> a[N<span class="number">+5</span>],b[N<span class="number">+5</span>],pos[N<span class="number">+5</span>],t,n,ans[N<span class="number">+5</span>],ct,flag;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Swap</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">ans[++ct]=x;ans[++ct]=y;</span><br><span class="line"><span class="built_in">swap</span>(pos[b[x]],pos[b[y]]);</span><br><span class="line"><span class="built_in">swap</span>(a[x],a[y]);<span class="built_in">swap</span>(b[x],b[y]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) pos[b[i]]=i;</span><br><span class="line">ct=<span class="number">0</span>,flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span>(a[i]==b[i]) ct++;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span>(b[i]!=a[pos[a[i]]]) flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(flag||(ct&gt;=<span class="number">1</span>&amp;&amp;n%<span class="number">2</span>==<span class="number">0</span>)||(ct!=<span class="number">1</span>&amp;&amp;n%<span class="number">2</span>==<span class="number">1</span>))&#123;<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);<span class="keyword">continue</span>;&#125;</span><br><span class="line">ct=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n/<span class="number">2</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(pos[a[i]]==n<span class="number">+1</span>-i) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(pos[a[i]]==i)&#123;</span><br><span class="line"><span class="built_in">Swap</span>(i,n/<span class="number">2</span><span class="number">+1</span>);</span><br><span class="line">i--;<span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Swap</span>(pos[a[i]],n<span class="number">+1</span>-i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ct/<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=ct;i+=<span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,ans[i],ans[i<span class="number">+1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-Arcology-On-Permafrost">D. Arcology On Permafrost</h2><p>最小值最大化，直接唤醒我对二分的回忆</p><p>这题二分有什么好处呢？我们知道：<strong>判断永远比计算更简单</strong>。为了判断x的合法性，我们只需要合理、平等的分布0~x-1这x个数，而要想计算x具体的值，你就得考虑如何满足优先级，每一步都患得患失</p><p>那么给定一个x，如何判断是否合法呢？首先，我们应该满足0~x-1这x个数每个出现至少m+1次；再者，对于每一个数，我们应该把这个m+1次合理分散，让它每一次分割都只能除去一次，那我们就得考虑k。如果x&gt;=k，那没得说，直接<code>0 1 2 ... x-1 0 1 2...</code>这样排下去。如果x&lt;k，我们可以这样：<code>0 1 2 ... x-1 0 0 ... 0 1 2 ...</code>，也就是多的全部补0（当然也可以补其它数），你可能会问多的这部分难道就不“充分利用”一下。不妨这样想，如果这个方案合格的话，是不是就无需“充分利用”了？什么时候合格呢？当n&gt;=m*k+x的时候。如果n&lt;m*k+x，这个方案就失效了。但是当n&lt;m*k+x时，“充分利用”能不能发挥作用呢？明显不能，因为若n&lt;m*k+x，进行m次分割后，剩下的数根本不足x个。那么显然，“充分利用”在哪种情况下都不必要了。</p><p>总结一下，二分法，下限为1，上限为n-m*k，判断的时候分x&gt;=k，x&lt;k两种情况</p><p>呃，Wrong answer on test 24，这是为何？</p><p>题解没用二分，这题貌似确实可以不用二分，x完全可以推理出来。</p><p>n&gt;=k*(m+1)时，对应x&gt;=k情况，这时ans*(m+1)&lt;=n，推出ans=n/(m+1)</p><p>n&lt;k*(m+1)时，对应x&lt;k情况，这时反正是模k，我们可以不管ans，直接构造<code>0 1 2 ... k-1 0 1 2...</code>（反正空的地方随便填），就包含了所有情况。</p><p>AC代码（我也没想到这么短）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>;</span><br><span class="line"><span class="type">int</span> t,n,m,k;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line"><span class="keyword">if</span>(n&gt;=k*(m<span class="number">+1</span>)) <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i%(n/(m<span class="number">+1</span>)));</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i%k);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>未完待续……</p>]]></content>
      
      
      <categories>
          
          <category> 解题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codeforces Round 1014 (Div. 2)</title>
      <link href="/2025/03/30/cf2025-3-30/"/>
      <url>/2025/03/30/cf2025-3-30/</url>
      
        <content type="html"><![CDATA[<p>啊哈！它终于来了——我的第一篇关于Codeforces比赛的题解。</p><p>对应的是Codeforces Round #1014 (Div. 2)，昨天晚上的比赛。不出意外，今天晚上应该发出这篇题解。</p><p>前排提示：如果我不太会，只会给个可能的思路，但我应该会在后面把坑填上的。</p><h2 id="A-Kamilka-and-the-Sheep">A. Kamilka and the Sheep</h2><p>答案就是max(ai)-min(ai)</p><p>由于每个羊加上d，所以它们之间的差值保持不变，而gcd(x,y)最大不超过 y - x (假设y&gt;x)，再加上d是任取的，所以不难想到，每对gcd(x+d,y+d)都能取到 y - x 这个最大值，那么显然找差值最大的一组max(ai)-min(ai)即可。再加上题目说ai互不相同，那么x=y情况就不用特殊考虑了。</p><p>AC代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">int</span> t,n,mx,mn;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line">mx=<span class="number">0</span>;mn=inf;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>,x;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">mx=<span class="built_in">max</span>(mx,x);mn=<span class="built_in">min</span>(mn,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,mx-mn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-Lady-Bug">B. Lady Bug</h2><p>变换保证了a的奇数位与b的偶数位间互相流通以及a的偶数位与b的奇数位间互相流通，那么我们只需统计相应领域0的数量，看看是否都能满足需求。</p><p>AC代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>;</span><br><span class="line"><span class="type">int</span> t,n,odd,even;</span><br><span class="line"><span class="type">char</span> a[N<span class="number">+5</span>],b[N<span class="number">+5</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line">even=odd=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s%s&quot;</span>,a,b);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="string">&#x27;1&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(i&amp;<span class="number">1</span>) even++;</span><br><span class="line"><span class="keyword">else</span> odd++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(b[i]==<span class="string">&#x27;1&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(i&amp;<span class="number">1</span>) odd++;</span><br><span class="line"><span class="keyword">else</span> even++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(odd&gt;=(n<span class="number">+1</span>)/<span class="number">2</span>&amp;&amp;even&gt;=n/<span class="number">2</span>) <span class="built_in">puts</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-Asuna-and-the-Mosquitoes">C. Asuna and the Mosquitoes</h2><p>可以这样想：可能的最大值是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>a</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\sum_{i=1}^na_i\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.2291em;vertical-align:-1.3645em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8645em;"><span style="top:-3.8645em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3645em;"><span></span></span></span></span></span></span></span></span></span></span>，有没有一种方式，可以让这些数能加在一起，达到最大值或接近最大值？</p><p>我想到一种方法：首先我们知道，如果有奇偶性不同的两个数，那么它们之间无论怎么操作，”相对奇偶性“还是不变的，可以一直加到一方消亡。但我们肯定不能乱加，如果不小心把剩下的数变成全奇或者全偶，那肯定血亏。怎么办呢？我灵感一现：如果我们留下一个偶数和一个奇数，偶数可以吃掉剩下的奇数，奇数可以吃掉剩下的偶数，最后它两一合并，是不是可以到最大？</p><p>很显然，按照这个思路，如果不是像样例那种全奇全偶的天崩开局的话，最后一定能达到sum-odd+1，稍加判断，这题就结束了</p><p>AC代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>;</span><br><span class="line"><span class="type">int</span> t,n,a[N<span class="number">+5</span>],even,odd,mx;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> sum;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line">even=odd=sum=mx=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span>(a[i]&amp;<span class="number">1</span>) odd++;</span><br><span class="line"><span class="keyword">else</span> even++;</span><br><span class="line"><span class="keyword">if</span>(even==<span class="number">0</span>||odd==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) mx=<span class="built_in">max</span>(mx,a[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,mx);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) sum+=a[i];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,sum-odd<span class="number">+1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-Mishkin-Energizer">D. Mishkin Energizer</h2><p>数据范围比较小，感觉应该没有什么很巧妙的方法，那就考虑暴力解法。</p><p>我一开始想会不会是简单粗暴——哪种少了我插入哪种。就这样一直执行复杂度为O(t*n*n)，但是后来发现这种操作有时是行不通的，比如<code>TTLII</code>，少了个L，但是没有可以插入L的地方。这意味着，我们有时不得不让步，去插入那些已经达标的种类。</p><p>这样操作：如果有偏少的种类，优先插入；如果没有，插入那些不少的。我们知道，插入一种，会多出剩余两种的位置，所以这种操作应该可行。只是不知道会不会超过2n……</p><p>不太妙，在test3超时了，这么小的数据范围，超时基本上意味着死循环，究竟是哪里卡死了呢？</p><p>没事了，我的问题orz</p><p>AC代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> t,n,sumI,sumL,sumT,op[<span class="number">205</span>],m;</span><br><span class="line"><span class="type">char</span> s[<span class="number">305</span>],pri[<span class="number">4</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Sort</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(sumI&lt;=sumL&amp;&amp;sumL&lt;=sumT) <span class="built_in">strcpy</span>(pri,<span class="string">&quot;ILT&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(sumT&lt;=sumL&amp;&amp;sumL&lt;=sumI) <span class="built_in">strcpy</span>(pri,<span class="string">&quot;TLI&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(sumI&lt;=sumT&amp;&amp;sumT&lt;=sumL) <span class="built_in">strcpy</span>(pri,<span class="string">&quot;ITL&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(sumL&lt;=sumI&amp;&amp;sumI&lt;=sumT) <span class="built_in">strcpy</span>(pri,<span class="string">&quot;LIT&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(sumL&lt;=sumT&amp;&amp;sumT&lt;=sumI) <span class="built_in">strcpy</span>(pri,<span class="string">&quot;LTI&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(sumT&lt;=sumI&amp;&amp;sumI&lt;=sumL) <span class="built_in">strcpy</span>(pri,<span class="string">&quot;TIL&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Insert</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">char</span> x=pri[<span class="number">0</span>],y=pri[<span class="number">1</span>],z=pri[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line"><span class="keyword">if</span>((s[i]==y&amp;&amp;s[i<span class="number">+1</span>]==z)||(s[i]==z&amp;&amp;s[i<span class="number">+1</span>]==y))&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=n;j&gt;i<span class="number">+1</span>;j--) <span class="built_in">swap</span>(s[j],s[j<span class="number">-1</span>]);</span><br><span class="line">s[i<span class="number">+1</span>]=x;n++;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="string">&#x27;I&#x27;</span>) sumI++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x==<span class="string">&#x27;L&#x27;</span>) sumL++;</span><br><span class="line"><span class="keyword">else</span> sumT++;</span><br><span class="line">op[++m]=i<span class="number">+1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line">sumL=sumT=sumI=m=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="string">&#x27;I&#x27;</span>) sumI++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[i]==<span class="string">&#x27;L&#x27;</span>) sumL++;</span><br><span class="line"><span class="keyword">else</span> sumT++;</span><br><span class="line"><span class="keyword">if</span>(sumI+sumL+sumT==<span class="built_in">max</span>(&#123;sumL,sumT,sumI&#125;))&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);<span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(sumI==sumT&amp;&amp;sumT==sumL) <span class="keyword">break</span>;</span><br><span class="line"><span class="built_in">Sort</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">Insert</span>())&#123;</span><br><span class="line"><span class="built_in">swap</span>(pri[<span class="number">0</span>],pri[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">Insert</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,m);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,op[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E-She-knows…">E. She knows…</h2><p>对我来说还是有点难度，想了一会，一开始以为是DP，但数据范围好像不太允许，后来觉得和k个点的位置密切相关，但又想不出突破口。吃了个饭，回来继续想，感觉这个数应该非常非常大。你这样想：如果不考虑k个点，那么枚举情况是不是可以到达2^(n*m)种，假设奇偶参半，也能达到恐怖的2^(n*m-1)。既然有那么大一个数，肯定有一种很普遍的规律来计算。</p><p>然后我想到”正难则反“的计数方法，会不会是统计奇数，毕竟”奇数“+”偶数“=2^(n*m)</p><p>然后我想到之前进行小规模枚举时，好像只有”靠边“的方格会影响奇偶性，我又验证了一会儿，果真如此</p><p>那我有想法了先假设全涂白，每出现一个”靠边“的黑格子奇偶性都会发生改变，如果不考虑k个给定的，一共有2*(n-2+m-2)个”靠边“的格子，其中奇数情况是多少呢？用一点组合数的知识，我们发现奇偶竟然是参半的。我们再考虑如果有给定的数”靠边 “的情况，显然，此时黑格子数量有了上限和下限，也就是说，奇偶可能不平衡了——最后竟然是计算组合数问题！不对，等会，好像奇偶依然是平衡的，没错，如果不平衡，就算用上高效的卢卡斯定理，组合数计算的复杂度将是恐怖的O(m+n)，它确实是平衡的！</p><p>只有一种情况不平衡——就是2*(n+m-4)个”靠边“的格子都钉死了，那特殊判断一下就行</p><p>思路挺难想到，但代码挺好写的</p><p>AC代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> t,n,m,k,white,black,x,y,c;</span><br><span class="line"><span class="type">const</span> <span class="type">long</span> <span class="type">long</span> p=(<span class="number">1e9</span>)<span class="number">+7</span>;</span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">pow</span><span class="params">(<span class="type">long</span> <span class="type">long</span> x)</span></span>&#123;</span><br><span class="line">x%=(p<span class="number">-1</span>);</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> ans=<span class="number">1</span>,d=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;x&gt;&gt;i;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>((x&gt;&gt;i)&amp;<span class="number">1</span>) ans=(ans*d)%p;</span><br><span class="line">d=(d*d)%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line">white=black=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>,&amp;x,&amp;y,&amp;c);</span><br><span class="line"><span class="keyword">if</span>(x+y==<span class="number">2</span>||x+y==m+n||y-x==m<span class="number">-1</span>||x-y==n<span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">1</span>||y==<span class="number">1</span>||y==m||x==n) c?black++:white++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(black+white==<span class="number">2</span>*(m+n<span class="number">-4</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(black&amp;<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">pow</span>(m*n-k));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">pow</span>(m*n-k<span class="number">-1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="F-Andryusha-and-CCB">F. Andryusha and CCB</h2><p>最后一题，现在才下午三点半，应该有机会赶出来</p><p>也终于是想出来了</p><p>看起来比较复杂哈（我一开始还以为和一些冷门的字符串算法或者dp有关，把孩子吓的T^T），你要一步步去抽象，抓住问题的本质。不妨先看样例<code>0010100</code>，我们先不考虑前缀，什么都考虑只会让我们无从下手。可以把这个序列抽象成<code>2 1 1 1 2</code>。什么意思呢？也就是说0和1其实不太重要，0和1的交界才是最重要的。现在我们随便取一段区间，它的beauty值其实就等于其包含的交界数量。</p><p>现在我们按k从大到小考虑：</p><p>考虑k=7，每个单独的数beauty都是0，显然可。</p><p>考虑k=6，取<code>2 1 1 1 1+1</code>，beauty皆为0，显然可。</p><p>考虑k=5，取<code>2 1 1 1 2</code>，beauty皆为0，显然可。</p><p>考虑k=4，我们发现不可能使得每个区间都不包含边界了，beauty不都为0，设beauty为1，那么<code>2+1 1+1 2</code>，最多只能分3组，而且最后一组beauty依然为0，不可。</p><p>考虑k=3最后一组beauty为0，不可。</p><p>考虑k=2，<code>2+1+1 1+2</code>，一组beauty为2，一组beauty为1，不可。</p><p>考虑k=1，显然可。</p><p>你能发现什么？好像如果分成5段，k&gt;=5时皆成立，而且k&lt;5时，好像<code>2 1 1 1 2</code>中间的2 ,1也不是太重要了</p><p>没错，关键在于这个5，我们不难发现如果设交界数量为m，k&gt;=m时，k满足要求，k&lt;m时，如果k|m，也可满足要求</p><p>所以一个公式写出答案ans=(m-f(m))+(n-m+1)=n-f(m)+1，f(x)为x的欧拉函数！</p><p>好吧，看来这题只是想让我们计算10^6内的欧拉函数</p><p>但是我忘了……让我先翻翻书</p><p>确实好久没用了，在这里稍微介绍一下吧。</p><hr><p>求1～n的欧拉函数的算法是由欧拉筛改编的，我们先来回顾一下欧拉筛。</p><p>欧拉筛本来是用来求1~n的素数的，它是对埃氏筛的改进，时间复杂度能达到O(n)，也就是线性。其核心原理：每个合数都有一个最小质因子，我们只需要保证它只被自己的最小质因子筛到，就能达到O(n)<br>具体怎么实现可以看代码，非常巧妙：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e2</span>;</span><br><span class="line"><span class="type">int</span> prime[N],ct,vis[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">euler_sieve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i]) prime[++ct]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=ct;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i*prime[j]&gt;=N) <span class="keyword">break</span>;</span><br><span class="line">            vis[i*prime[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//prime[j]已是i的最小因子</span></span><br><span class="line">            <span class="comment">//如果继续筛下去，prime[j]*i将被prime[j]筛到</span></span><br><span class="line">            <span class="comment">//不符合只被其最小质因子筛到的条件</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">euler_sieve</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=ct;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,prime[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>稍作改动，我们就能顺带求出1~n的最小质因子：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e2</span>;</span><br><span class="line"><span class="type">int</span> prime[N],ct,vis[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">euler_sieve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i]) prime[++ct]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=ct;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i*prime[j]&gt;=N) <span class="keyword">break</span>;</span><br><span class="line">            vis[i*prime[j]]=prime[j];</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">euler_sieve</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;N;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,i,vis[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再稍作改动，就能得出1~n的欧拉函数<br>这里先提一下等会会用到的欧拉函数的性质：</p><ol><li><strong>积性函数</strong><br>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\gcd(m,n)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时：</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\varphi(mn) = \varphi(m) \cdot \varphi(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">mn</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p><ol start="2"><li><p><strong>质数幂次公式</strong></p><p>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span> 是质数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>≥</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k \geq 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><msup><mi>p</mi><mi>k</mi></msup><mo stretchy="false">)</mo><mo>=</mo><msup><mi>p</mi><mi>k</mi></msup><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><mfrac><mn>1</mn><mi>p</mi></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\varphi(p^k) = p^k \left(1 - \frac{1}{p}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p></li></ol><p>​特别的有：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\varphi(p) = p - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p>然后给上代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e2</span>;</span><br><span class="line"><span class="type">int</span> prime[N],ct,vis[N],phi[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">euler_sieve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    phi[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])&#123;</span><br><span class="line">            prime[++ct]=i;</span><br><span class="line">            phi[i]=i<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=ct;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i*prime[j]&gt;=N) <span class="keyword">break</span>;</span><br><span class="line">            vis[i*prime[j]]=prime[j];</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) phi[i*prime[j]]=phi[i]*prime[j];</span><br><span class="line">            <span class="keyword">else</span> phi[i*prime[j]]=phi[i]*(prime[j]<span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">euler_sieve</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;N;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,i,phi[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>其实我整完这些才发现这题和欧拉函数一点关系没有</p><p>其实题目的意思是求因子个数，T^T</p><p>但我好歹码了那么久代码，还是放出来给各位看看</p><p>所以现在ans=f(x)+(n-m)，f(x)指正因子个数</p><p>不过这玩意听说也能用欧拉筛？好像确实，我小改一下</p><p>不知道为什么test2没过，明天再看一下吧</p><p>未AC代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>;</span><br><span class="line"><span class="type">int</span> prime[N<span class="number">+5</span>],ct,mn[N<span class="number">+5</span>],d[N<span class="number">+5</span>],ex[N<span class="number">+5</span>],g[N<span class="number">+5</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">euler_sieve</span><span class="params">()</span></span>&#123;</span><br><span class="line">d[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!mn[i])&#123;</span><br><span class="line">prime[++ct]=i;</span><br><span class="line">d[i]=<span class="number">2</span>;</span><br><span class="line">g[i]=<span class="number">1</span>;ex[i]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=ct;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i*prime[j]&gt;N) <span class="keyword">break</span>;</span><br><span class="line">mn[i*prime[j]]=prime[j];</span><br><span class="line"><span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)&#123;</span><br><span class="line">ex[i*prime[j]]=ex[i]<span class="number">+1</span>;</span><br><span class="line">g[i*prime[j]]=g[i];</span><br><span class="line">d[i*prime[j]]=d[g[i]]*(ex[i*prime[j]]<span class="number">+1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">ex[i*prime[j]]=<span class="number">1</span>;</span><br><span class="line">g[i*prime[j]]=i;</span><br><span class="line">d[i*prime[j]]=d[i]*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> t,n,m;</span><br><span class="line"><span class="type">char</span> s[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">euler_sieve</span>();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s);</span><br><span class="line">m=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]!=s[i<span class="number">-1</span>]) m++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>,i-m<span class="number">+1</span>+d[m]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>update:</strong></p><p>我知道哪里出问题了！样例太特别了，如果是这样：<code>1 2 1</code>，虽然分成3段，但它并非不能分2个区间，只需：<code>(1 1)+(1 1)</code></p><p>果然还是操之过急了，看来得大修了</p><p>好像也不用，无非是<code>2</code>可以单独分成2份（大于2的亦可），等等，也不对</p><p>……</p><p>看了一下官方题解，发现真的得大修……</p><p>好吧，我终于看懂题解了</p><p>也就是先枚举beauty值m，对每一个m，再从1开始枚举k，如果不考虑大于或等于2的段的话，显然只需每次让prefix到</p><p>k*m的k可能值+1（即对当前beauty符合条件）</p><p>难就难在怎么处理大于或等于2的段，我们知道，这种段可以自身分为2部分，不分的时候其实和上面没什么太大区别，只是相应的prefix是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>k</mi><mo>∗</mo><mi>m</mi></mrow></munderover><msub><mi>b</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\sum_{i=1}^{k*m}b_i\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.4138em;vertical-align:-1.4569em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9569em;"><span style="top:-3.9569em;"><span class="pstrut" style="height:3.8361em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4569em;"><span></span></span></span></span></span></span></span></span></span></span>，其中bi代表第i段。但是如果要分，比如<code>1 1 3 1 ...</code>，m=2，k=1时，<code>(1 1 1)+2 1 ...</code>是可以的，<code>(1 1 2)+1 1 ...</code>是可以的，<code>(1 1 3) 1 ...</code>也是可以的，这就形成了一个区间，区间内的prefix均满足要求。很显然，如果我们接着考虑k=2，我们就得分三种情况，从三个起点出发，但如果只是简单的分类会导致时间复杂度指数级增长。怎么办呢？</p><p>题解中针对这种情况，提出对于每一对(m,k)，满足要求的prefix的区间是连续的，如果是这样，那么原先的指数级讨论，就成了区间到区间的讨论，我们只需用上一个区间的左端点和右端点就可以分别求出下一个区间的左端点和右端点。</p><p>区间连续性的证明用的是数学归纳法，这里不给出证明过程，感兴趣的读者可以看<a href="https://codeforces.com/blog/entry/141023">官方题解</a>。</p><p>区间处理可以用差分数组</p><p>没做出来很有挫败感，这题就不贴自己写的代码了</p><p>看看官方代码吧（我加了注释）：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n; cin &gt;&gt; n;</span><br><span class="line">string s; cin &gt;&gt; s;</span><br><span class="line">vector &lt;<span class="type">int</span>&gt; a;</span><br><span class="line"><span class="type">int</span> curr = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (i &amp;&amp; s[i] != s[i - <span class="number">1</span>]) &#123;</span><br><span class="line"><span class="keyword">if</span> (curr) a.<span class="built_in">push_back</span>(curr);</span><br><span class="line">curr = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> ++curr;</span><br><span class="line">&#125;<span class="comment">//分块</span></span><br><span class="line">a.<span class="built_in">push_back</span>(curr);</span><br><span class="line"><span class="type">int</span> sz = a.<span class="built_in">size</span>();</span><br><span class="line">vector &lt;<span class="type">int</span>&gt; <span class="built_in">ans</span>(n, <span class="number">0</span>), <span class="built_in">left</span>(sz, <span class="number">0</span>), <span class="built_in">right</span>(sz, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; sz; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!i) &#123;</span><br><span class="line">left[i] = <span class="number">0</span>; right[i] = a[i] - <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">left[i] = right[i - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">right[i] = left[i] + a[i] - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//预处理第i块的左右端点</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; sz; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = left[i]; j &lt;= right[i]; ++j) &#123;</span><br><span class="line">ans[j] += j - i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//预处理m=0的情况</span></span><br><span class="line">vector &lt;<span class="type">int</span>&gt; <span class="built_in">add</span>(sz, <span class="number">0</span>);<span class="comment">//差分数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> m = <span class="number">1</span>; m &lt; sz; ++m) &#123;</span><br><span class="line">ll l = m, r = m, k = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (l &lt; sz) &#123;</span><br><span class="line">++add[l];</span><br><span class="line"><span class="keyword">if</span> (r + <span class="number">1</span> &lt; sz) --add[r + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (a[l] == <span class="number">1</span>) &#123;</span><br><span class="line">l += m + <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">l += m;</span><br><span class="line">&#125;</span><br><span class="line">r += m + <span class="number">1</span>;</span><br><span class="line">++k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> pref = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; sz; ++i) &#123;</span><br><span class="line">pref += add[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = left[i]; j &lt;= right[i]; ++j) &#123;</span><br><span class="line">ans[j] += pref;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//加上m=0情况得到答案</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">cout &lt;&lt; ans[i];</span><br><span class="line"><span class="keyword">if</span> (i != n - <span class="number">1</span>) cout &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"><span class="type">int</span> t; cin &gt;&gt; t;</span><br><span class="line"><span class="keyword">while</span> (t--) &#123;</span><br><span class="line"><span class="built_in">solve</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 解题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Verilog 笔记</title>
      <link href="/2025/03/29/verilog-notes/"/>
      <url>/2025/03/29/verilog-notes/</url>
      
        <content type="html"><![CDATA[<p>本来说是打算整点Codeforces的比赛来维持以下博客的更新频率，但是无奈最近一直没有时间。不过不要紧，我近几天已经对我的作息时间做了大规模调整，总算是不那么忙了。Codeforces那边不出意外应该这周就会出一期。现在，由于数字逻辑设计实验课带来的巨大挑战，让我先浅浅学一下Verilog这门语言。</p><p>Verilog是一种硬件描述语言，据说是由C语言发展而来，语法相对灵活、宽松，主要用于设计集成电路</p><p>本文主要参考这位大佬的<a href="https://blog.csdn.net/jac_chao/article/details/123744724">文章</a>，当然顺序和内容会有所不同，也会带上我的一点点个人色彩</p><p>同时也参考了<a href="https://blog.csdn.net/CHUXUEZHE5872/article/details/135882529">这篇</a>进行了补充，两篇都来自CSDN</p><p><s>说实话其实可以不用看我的，但是这并不能阻止我水上一篇笔记</s></p><h2 id="第一章-基础语法">第一章 基础语法</h2><p>主要内容都在这章。行吧，废话不多说。我们都学过C语言对吧，那么我先把Verilog中和C语言相似的部分讲完。</p><p>后续：好像不知不觉把不同的部分也讲了，T^T</p><h3 id="1-变量命名">1. 变量命名</h3><p>和C基本一致，分大小写，可以有字母，下划线，数字和“$”（貌似就多了这玩意）</p><p>然后第一个字符不为数字或“<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>”（问就是我也不知道“</mtext></mrow><annotation encoding="application/x-tex">”（问就是我也不知道“</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">”</span><span class="mord cjk_fallback">（问就是我也不知道</span><span class="mord">“</span></span></span></span>”有什么用）</p><h3 id="2-变量与常量">2. 变量与常量</h3><h4 id="2-1-变量取值">2.1 变量取值</h4><p>无论是哪种变量类型，都只有4种取值：</p><ul><li>0：低电平</li><li>1：高电平</li><li>x：未知状态</li><li>z：高阻状态</li></ul><h4 id="2-2-变量类型">2.2 变量类型</h4><p>众所周知，C语言里有很多数据类型，像double, int ,char等等。Verilog里的变量主要是两种——wire and reg</p><p>（1）<strong>wire（线网型）</strong></p><p>​最普遍的变量类型，没有指定类型时的默认类型。wire可以视作一个信号端口，需要用assign语句进行赋值。</p><p>​如果没有驱动元件连接到 wire 型变量，初始值为 z。</p><p>​这里需要和C语言区分开，C语言是一种编程语言，它是一步步顺序执行的，而Verilog是一种硬件描述语言，也就是单纯地对空间进行刻画，与时间无关。这就导致：如果你把变量<code>a</code>赋值给变量<code>b</code>，实际上是在两个端口之间生成了一条物理连线，之后如果再去更改<code>b</code>的值，这个操作也会同步到<code>a</code>（也就是wire的赋值操作类似于C语言的起别名操作）</p><p>（2）<strong>reg（寄存器型）</strong></p><p>​与wire不同的是：reg 类似C语言中的变量，对应一个存储单元，它的数据会保持最后一次赋值，直到被改写。</p><p>​在always、initial语句中被赋值的变量都是reg型变量（关于always、initial语句，后续会进行补充）</p><p>（3）<strong>其它类型</strong></p><p>以下几种类型都不对应具体的元件，只作为辅助用的变量</p><ul><li><p>integer（整数型）</p><p>类似int，一般为32bit</p></li><li><p>time（时间型）</p><p>特殊的时间寄存器 ，对仿真时间进行保存</p></li><li><p>real（实数型）</p><p>类似浮点数</p></li></ul><h4 id="2-3-常数">2.3 常数</h4><p>常量可以分为整型、实数型和字符串三种，下面只讨论整型</p><p>如果随便写个数字，会默认是32bit的十进制整数，如果我们要书写不同基数以及不同位宽的数，需按照以下的格式：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[位宽]&#x27;[数制][值]</span><br><span class="line"><span class="number">8&#x27;b1000_1100</span> <span class="comment">//二进制</span></span><br><span class="line"><span class="comment">//加下划线只是为了增强可读性，可加可不加</span></span><br><span class="line"><span class="number">8&#x27;h8c</span> <span class="comment">//十六进制</span></span><br><span class="line"><span class="number">8&#x27;o214</span> <span class="comment">//八进制</span></span><br><span class="line"><span class="number">8</span>&#x27;<span class="number">140</span> <span class="comment">//十进制</span></span><br></pre></td></tr></table></figure><p>常常用parameter和localparam声明一个常量，前者类似全局变量，作用域为文件，后者类似局部变量，作用域为本模块</p><h3 id="3-运算符">3. 运算符</h3><p>（1）<strong>关系运算符</strong>：==，!=，===（全等），!==（非全等），&gt;，&lt;，&gt;=，&lt;=（结果不定返回x）</p><p>（2）<strong>位运算符</strong>：&amp;，|，^，~，~&amp;，~|，~^，&lt;&lt;，&gt;&gt;（多了与非、或非和异或非）</p><p>（3）<strong>归约运算符</strong>：&amp;，|，~，^，~^，~|</p><p>​稍微提一下这玩意，毕竟C里面没有。它是一个一元运算符，对象是一个数组（准确说叫向量），返回值是一个bit，举个例子：</p><p>​<code>&amp;a[3:0]</code>等价于<code>a[3]&amp;a[2]&amp;a[1]&amp;a[0]</code>，就是对数组的每一项都同时进行与运算。（目前不知道有什么用）</p><p>（4）<strong>算数运算符</strong>：+，-，*，/，%</p><p>​注：算术表达式结果的长度由最长的操作数决定。而在赋值语句下，算术结果的长度由等号操作符左端的目标长度决定</p><p>（5）<strong>逻辑运算符</strong>：&amp;&amp;，||，!</p><p>（6）<strong>三目运算符</strong>： : ?（和C语言一致）</p><p>（7）<strong>拼接运算符</strong>：{，}（可按顺序拼接多个参数）</p><h3 id="4-向量（vector）">4. 向量（vector）</h3><p>类比C语言的数组，是一组信号的集合,上面提到的位宽可以理解为数组长度</p><h4 id="4-1-定义">4.1 定义</h4><ul><li><strong>声明格式</strong>：<code>input/output wire/reg [高位:低位] 向量名;</code></li><li><strong>示例</strong>：<code>reg [7:0] data;</code> 表示<code>data[7]</code>为最高位（MSB），<code>data[0]</code>为最低位（LSB）</li><li><strong>反向声明</strong>：若声明为<code>reg [0:7] data;</code>，则<code>data[0]</code>为MSB，<code>data[7]</code>为LSB</li></ul><h4 id="4-2-向量片选">4.2 向量片选</h4><p>下面只介绍Verilog的动态片选</p><ul><li><p><strong>语法</strong>：<code>向量名[基址 +: 宽度]</code> 或 <code>向量名[基址 -: 宽度]</code></p></li><li><p><strong><code>+</code></strong>：从基址开始向高位扩展</p><p><strong><code>-</code></strong>：从基址开始向低位扩展</p></li></ul><h3 id="5-语句">5. 语句</h3><h4 id="5-1-if-else">5.1 if-else</h4><p>和C语言格式一致：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(&lt;条件表达式 <span class="number">1</span>&gt;)</span><br><span class="line">    语句或语句块 <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(&lt;条件表达式 <span class="number">2</span>&gt;)</span><br><span class="line">    语句或语句块 <span class="number">2</span>;</span><br><span class="line">    ………</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    语句或语句块 n;</span><br></pre></td></tr></table></figure><h4 id="5-2-case">5.2 case</h4><p>类似C语言的switch-case，格式有出入：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span>(&lt;控制表达式&gt;)</span><br><span class="line">    &lt;分支语句 <span class="number">1</span>&gt; : 语句块 <span class="number">1</span>;</span><br><span class="line">    &lt;分支语句 <span class="number">2</span>&gt; : 语句块 <span class="number">2</span>;</span><br><span class="line">    &lt;分支语句 <span class="number">3</span>&gt; : 语句块 <span class="number">3</span>;</span><br><span class="line">    ………</span><br><span class="line">    &lt;分支语句 n&gt; : 语句块 n;</span><br><span class="line">    <span class="keyword">default</span> : 语句块 n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">endcase</span></span><br></pre></td></tr></table></figure><p>可以用来搭建多路选择器</p><p>结尾记得加endcase</p><h4 id="5-3-for">5.3 for</h4><p>和C语言差别不大：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (初始化表达式; 终止条件; 递增表达式) <span class="keyword">begin</span></span><br><span class="line">    <span class="comment">// 循环体</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="6-注释">6. 注释</h3><p>和C一模一样，不多说了</p><h2 id="第二章-模块与结构">第二章 模块与结构</h2><h3 id="1-模块（Module）">1. 模块（Module）</h3><p>和C语言的函数很像，“模块”是Verilog程序的最基本设计单元</p><h4 id="1-1-模块组成">1.1 模块组成</h4><p>举个例子：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span>  top_module(</span><br><span class="line">    <span class="keyword">input</span> a,</span><br><span class="line">    <span class="keyword">input</span> b,</span><br><span class="line">    <span class="keyword">output</span> out</span><br><span class="line">);<span class="comment">//看出来了吗？这其实就相当于C语言中函数定义，只不过用了换行符，参数之间用“,”分隔</span></span><br><span class="line"> </span><br><span class="line">   ....... </span><br><span class="line"> </span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>注意：虽然我说模块和C语言中函数很像，但是不同模块其实不能同时存在于同一个.v文件中，当你在当前模块中调用其它模块时，它其实是一个跨文件的调用</p><h4 id="1-2-模块实例化">1.2 模块实例化</h4><p>比如说我之前以及写了一个模块 and_gate.v</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> and_gate (<span class="keyword">input</span> a, b, <span class="keyword">output</span> y);</span><br><span class="line">      <span class="keyword">assign</span> y = a &amp; b;</span><br><span class="line">  <span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p>然后就可以在新文件top_module.v中调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">module top_module (input a, b, output y);</span><br><span class="line">      // 实例化 and_gate</span><br><span class="line">      and_gate inst (.a(a), .b(b), .y(y));</span><br><span class="line">  endmodule</span><br></pre></td></tr></table></figure><p>其中&quot;and_gate&quot;就是之前定义的模块，&quot;inst&quot;就是实例化模块</p><h3 id="2-逻辑块">2. 逻辑块</h3><p>暂时介绍一下always逻辑块，后面慢慢补充</p><h4 id="2-1-always">2.1 always</h4><p><code>always</code> 块用于描述 <strong>硬件的行为逻辑</strong>，是 Verilog 中实现时序逻辑（如触发器）和组合逻辑（如门电路）的核心语法</p><p><strong>(1) 基本语法</strong></p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">always</span> @(敏感信号列表) <span class="keyword">begin</span></span><br><span class="line">    <span class="comment">// 逻辑代码（赋值、条件判断等）</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><strong>(2) 敏感信号列表的类型</strong></p><ul><li><p><strong>电平敏感（组合逻辑）</strong>：<br>例如 <code>always @(*)</code> 或 <code>always @(a, b)</code>，当输入信号变化时立即更新输出。<br><strong>示例：组合逻辑加法器</strong></p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">always</span> @(*) <span class="keyword">begin</span></span><br><span class="line">    sum = a + b;  <span class="comment">// 组合逻辑，无时钟参与</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="第三章-示例">第三章 示例</h2><p>就按照我们学的顺序来，看看下面这些元件用verilog怎么描述</p><h3 id="1-3-8译码器">1. 3-8译码器</h3><p><strong>真值表</strong></p><table><thead><tr><th>en</th><th>in[2:0]</th><th>y[7:0]</th></tr></thead><tbody><tr><td>0</td><td>xxx</td><td>8’b0000_0000</td></tr><tr><td>1</td><td>000</td><td>8’b0000_0001</td></tr><tr><td>1</td><td>001</td><td>8’b0000_0010</td></tr><tr><td>1</td><td>010</td><td>8’b0000_0100</td></tr><tr><td>…</td><td>…</td><td>…</td></tr><tr><td>1</td><td>111</td><td>8’b1000_0000</td></tr></tbody></table><hr><p><strong>代码</strong></p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> decoder_3to8_case (</span><br><span class="line">    <span class="keyword">input</span>      en,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">2</span>:<span class="number">0</span>] in,</span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] y</span><br><span class="line">);</span><br><span class="line"><span class="keyword">always</span> @(*) <span class="keyword">begin</span></span><br><span class="line">    <span class="comment">//@(*)等价于@(en,in)</span></span><br><span class="line">    <span class="keyword">if</span> (en) <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">case</span> (in)</span><br><span class="line">            <span class="number">3&#x27;b000</span>: y = <span class="number">8&#x27;b00000001</span>;</span><br><span class="line">            <span class="number">3&#x27;b001</span>: y = <span class="number">8&#x27;b00000010</span>;</span><br><span class="line">            <span class="number">3&#x27;b010</span>: y = <span class="number">8&#x27;b00000100</span>;</span><br><span class="line">            <span class="number">3&#x27;b011</span>: y = <span class="number">8&#x27;b00001000</span>;</span><br><span class="line">            <span class="number">3&#x27;b100</span>: y = <span class="number">8&#x27;b00010000</span>;</span><br><span class="line">            <span class="number">3&#x27;b101</span>: y = <span class="number">8&#x27;b00100000</span>;</span><br><span class="line">            <span class="number">3&#x27;b110</span>: y = <span class="number">8&#x27;b01000000</span>;</span><br><span class="line">            <span class="number">3&#x27;b111</span>: y = <span class="number">8&#x27;b10000000</span>;</span><br><span class="line">        <span class="keyword">endcase</span></span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">        y = <span class="number">8&#x27;b00000000</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h3 id="2-全加器">2. 全加器</h3><p><strong>定义半加器模块</strong></p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> half_adder (</span><br><span class="line">    <span class="keyword">input</span>  a, b,</span><br><span class="line">    <span class="keyword">output</span> sum, cout</span><br><span class="line">);</span><br><span class="line">    <span class="keyword">assign</span> sum  = a ^ b;  <span class="comment">// 异或门</span></span><br><span class="line">    <span class="keyword">assign</span> cout = a &amp; b;  <span class="comment">// 与门</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><p><strong>实例化半加器构建全加器</strong></p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> full_adder_hierarchical (</span><br><span class="line">    <span class="keyword">input</span>  a, b, cin,</span><br><span class="line">    <span class="keyword">output</span> sum, cout</span><br><span class="line">);</span><br><span class="line">    <span class="keyword">wire</span> s1, c1, c2;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第一个半加器：计算 a + b</span></span><br><span class="line">    half_adder ha1 (</span><br><span class="line">        <span class="variable">.a</span>(a),</span><br><span class="line">        <span class="variable">.b</span>(b),</span><br><span class="line">        <span class="variable">.sum</span>(s1),   <span class="comment">// 中间和 s1 = a ^ b</span></span><br><span class="line">        <span class="variable">.cout</span>(c1)   <span class="comment">// 中间进位 c1 = a &amp; b</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第二个半加器：计算 s1 + cin</span></span><br><span class="line">    half_adder ha2 (</span><br><span class="line">        <span class="variable">.a</span>(s1),</span><br><span class="line">        <span class="variable">.b</span>(cin),</span><br><span class="line">        <span class="variable">.sum</span>(sum),  <span class="comment">// 最终和 sum = s1 ^ cin</span></span><br><span class="line">        <span class="variable">.cout</span>(c2)   <span class="comment">// 中间进位 c2 = s1 &amp; cin</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 进位输出逻辑：cout = c1 | c2</span></span><br><span class="line">    <span class="keyword">assign</span> cout = c1 | c2;</span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line">``</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 课内拓展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>琐事（其一）</title>
      <link href="/2025/03/10/mind-wondering1/"/>
      <url>/2025/03/10/mind-wondering1/</url>
      
        <content type="html"><![CDATA[<p>​微积分学不明白，大物和离散不知道学了什么，数字逻辑实验课半天搞不懂电路，fds的project被peer_review搞心态……额，还有博客N久没更了。</p><p>​总之，开学以来已经消沉许久了。想打cf，但是每次比赛时间都那么阴间，实在是熬不动。于是乎，鄙人决定，干脆不冲rating了。虽然吃不上热乎的，但在赛后讨一点残羹冷炙还是可以接受的，这也让我有更多的时间去思考。</p><p>所以，以后我可能会不定时更新cf上近期比赛的题解。肯定做不到每场比赛都更新，但我会在不忙的时候尽力去搞的。</p><p>最近马上要小测了，先撑过这一阵子再说吧……</p>]]></content>
      
      
      <categories>
          
          <category> 个人杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 呓语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>找不同：Python与C语言</title>
      <link href="/2025/01/17/PythonKnowlege/"/>
      <url>/2025/01/17/PythonKnowlege/</url>
      
        <content type="html"><![CDATA[<p>最近心血来潮跑去学了一会儿Python，想在这里浅浅地总结一波Python与C语言（包括C++）用法上的不同之处</p><p><s>你说得对，但是我还是喜欢用C++</s></p><p>如文中发现有不妥之处，欢迎指正</p><h4 id="数据类型">数据类型</h4><p>Python变量不用预设数据类型，甚至说容器也不用（前提是后面得接确定了数据类型的值，类似C++里面的auto）</p><p>Python中支持字符串转int, float，也支持int, float转字符串</p><p>Python字符串支持直接相加（有点像C++的string容器），甚至可以与数字相乘（用于表示重复多次）</p><p>Python里面没有long long, double，只有int, float, 因为Python支持大数运算 <s>酸了酸了</s></p><p>Python里面还没有char，所以单引号、双引号没区别</p><h4 id="书写差异">书写差异</h4><p>Python中整除要用//，只用/会返回float类型</p><p>Python中elif代表C语言中的else if</p><p>Python中for, if, def 后面没有圆括号和花括号，但是需要加冒号</p><p>Python中有严格的缩进，功能相当于C语言中的花括号</p><p>Python中True, False 在C++中是true, false（C中还没有出现布尔型，在C++中才有）</p><p>Python可以用连续不等式判断（4.5 &lt; GPA &lt;= 5.0, etc），但是C语言不支持（至少结果不是你想的那样）</p><p>Python中not, and, or在C语言 中分别对应 ! ,&amp;&amp;, ||，但三者优先级在Python和C中都是一样的</p><p>Python输出多行字符比较方便，用三对双引号就行</p><h4 id="函数相关">函数相关</h4><p>Python中input函数返回值为字符串</p><p>Python中用len()作为长度函数，不仅能返回字符串长度，还能返回列表等容器长度</p><p>Python中求多次方用**就行，而C语言中要调用math里的pow, sqrt 等幂函数</p><p>Python字符串可以用f格式插入元素</p><p>Python的import类似C中#include，不过Python可以通过from引入一部分函数</p><h4 id="容器相关">容器相关</h4><p>Python中没有数组，但是有列表（List），而且列表可以存不同数据类型的数。<s>但是我感觉Python中所谓列表其实底层是用树来实现的。额，查了一下，发现没那么高级。</s> 本质上类似C++中的vector容器，而不是C++中的链表。</p><p>Python中列表什么的也是可以用print输出的</p><p>Python中的字典相当于 C++中的unordered_map，底层都是哈希表</p><p>Python字典查找用in不用find，删除用del不用erase</p><h4 id="面向对象">面向对象</h4><p>Python和C++都支持面向对象，而C语言仅支持面向过程</p><p>Python中的class类……桥豆麻袋，我C++中的类我还没学，这比个毛线。暂时到这里好了。</p><p>欲知后事如何，且听下回分解（逃</p>]]></content>
      
      
      <categories>
          
          <category> 课外技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题配置</title>
      <link href="/2025/01/15/optimise_myblog/"/>
      <url>/2025/01/15/optimise_myblog/</url>
      
        <content type="html"><![CDATA[<p><strong>前排温馨提示</strong>：配置主题需要耐心，建议可以先跳过自己不感兴趣或者暂时用不上的部分，还有记得不定期备份，<s>防止像我一样因为操作失误中道崩殂</s>，即便如此你可能还是会消耗将近一天的时间（<s>应该没有人会像我一样快捣鼓一星期了才结束</s>），希望你能有心理准备</p><p>本文主要参考了<a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 文檔(一) 快速開始 | Butterfly</a>和该系列的后续章节</p><p>以及B站上发现的<a href="https://blog.anheyu.com/posts/sdxhu.html">butterfly 重装日记 | 安知鱼 (anheyu.com)</a>，CSDN上发现的<a href="https://blog.csdn.net/qq_58608526/article/details/124652412">Hexo+Github博客搭建教程_hexo github-CSDN博客</a></p><p>由于<a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 文檔(一) 快速開始 | Butterfly</a>及其后续写的非常详尽，读者可以跟随着先把主体部分解决，下面我仅仅补充其中未提及的部分</p><h4 id="背景设置渐变色">背景设置渐变色</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">background:</span> <span class="string">&#x27;linear-gradient(0deg,rgba(247,149,51,0.1) 0,rgba(243,112,85,0.1) 15%,rgba(239,78,123,0.1) 30%,rgba(161,102,171,0.1) 44%,rgba(80,115,184,0.1) 58%,rgba(16,152,173,0.1) 72%,rgba(7,179,155,0.1) 86%,rgba(109,186,130,0.1) 100%);&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="添加首页磁贴">添加首页磁贴</h4><p><code>cnpm install hexo-butterfly-categories-card --save</code>安装插件</p><p><code>_config.butterfly.yml</code>中添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-butterfly-categories-card</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/a9131002/</span></span><br><span class="line"><span class="attr">categoryBar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">/</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">column:</span> <span class="string">odd</span> <span class="comment"># odd：3列 | even：4列</span></span><br><span class="line">  <span class="attr">row:</span> <span class="number">1</span> <span class="comment">#显示行数，默认两行，超过行数切换为滚动显示</span></span><br><span class="line">  <span class="attr">message:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">Ubuntu指南</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover1.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">玩转Win10</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover2.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">长篇小说连载</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover3.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">个人日记</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover4.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">诗词歌赋</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover5.webp</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">descr:</span> <span class="string">杂谈教程</span></span><br><span class="line">      <span class="attr">cover:</span> <span class="string">https://npm.elemecdn.com/akilar-candyassets/image/cover6.webp</span></span><br><span class="line">  <span class="attr">custom_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-categories-card@1.0.0/lib/categorybar.css</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="添加看板娘">添加看板娘</h4><p>先安装插件<code>cnpm install --save hexo-helper-live2d</code></p><p>把下面的代码粘贴到你的根目录下的<code>_config.yml</code>中</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#开关插件版看板娘</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://cdn.cbd.int/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-koharu</span> <span class="comment"># npm-module package name</span></span><br><span class="line">    <span class="comment"># use: https://unpkg.com/live2d-widget-model-koharu@1.0.5/assets/koharu.model.json # 你的自定义 url</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">left</span> <span class="comment">#控制看板娘位置</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span> <span class="comment">#控制看板娘大小</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span> <span class="comment">#控制看板娘大小</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">false</span> <span class="comment"># 手机中是否展示</span></span><br></pre></td></tr></table></figure><p>然后从<a href="https://github.com/xiazeyu/live2d-widget-models">这个网站</a>下载你想要的看板娘，并在上面代码的<code>use</code>后面改成你想要的看板娘就可以了。</p><p>其实我还发现了另一种版本的看板娘，而且部署流程十分简单，只需要在<code>_config.butterfly.yml</code>中的<code>inject-&gt;head</code>下面加上这样一句代码<code>- &lt;script src=&quot;https://fastly.jsdelivr.net/npm/live2d-widgets@0/autoload.js&quot;&gt;&lt;/script&gt;</code>。</p><p>这个版本的看板娘交互功能比较多，可以根据自己的喜好来选择。他们的网址也贴在这里<a href="https://github.com/stevenjoezhang/live2d-widget">这里</a>，有兴趣可以自己去研究。</p><p>如果前面两个版本你都不满意，可以看看这篇文章<a href="https://blog.csdn.net/Empty_CityJK/article/details/142688409?ops_request_misc=%7B%22request%5Fid%22%3A%225da3e823e5ad23f284c167bf1ba1c155%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=5da3e823e5ad23f284c167bf1ba1c155&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-142688409-null-null.142%5Ev101%5Epc_search_result_base6&amp;utm_term=hexolive2d&amp;spm=1018.2226.3001.4187">在Hexo博客上添加可爱的Live 2D模型(.moc/.moc3) -CSDN博客</a></p><h4 id="增加wowjs特效">增加wowjs特效</h4><p>总之就是一个好看的动画效果，演示可以看这个视频<a href="https://www.bilibili.com/video/BV1nd4y1A7Wt?spm_id_from=333.788.videopod.sections&amp;vd_source=53c06aa6876d619b90f8fb80460e4461">12.wowjs与留言板的配置_哔哩哔哩_bilibili</a></p><p>先安装个插件<code>cnpm install hexo-butterfly-wowjs --save</code></p><p>把下面的代码粘贴到你的根目录下的<code>_config.butterfly.yml</code>中:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wowjs</span></span><br><span class="line"><span class="comment"># see https://www.npmjs.com/package/hexo-butterfly-wowjs</span></span><br><span class="line"><span class="attr">wowjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#控制动画开关。true是打开，false是关闭</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">10</span> <span class="comment">#过滤器优先级</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span> <span class="comment">#移动端是否启用，默认移动端禁用</span></span><br><span class="line">  <span class="attr">animateitem:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">recent-post-item</span> <span class="comment">#必填项，需要添加动画的元素的class</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__zoomIn</span> <span class="comment">#必填项，需要添加的动画</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="number">1.</span><span class="string">5s</span> <span class="comment">#选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">delay:</span> <span class="string">200ms</span> <span class="comment">#选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">offset:</span> <span class="number">30</span> <span class="comment">#选填项，开始动画的距离（相对浏览器底部）</span></span><br><span class="line">      <span class="attr">iteration:</span> <span class="number">1</span> <span class="comment">#选填项，动画重复的次数</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">card-widget</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__zoomIn</span></span><br><span class="line">      <span class="attr">delay:</span> <span class="string">200ms</span></span><br><span class="line">    <span class="comment"># - class: flink-list-card</span></span><br><span class="line">    <span class="comment">#   style: wowpanels</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">flink-list-card</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__flipInY</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">3s</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">flink-list-card</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__animated</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">3s</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">article-sort-item</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__slideInRight</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="number">1.</span><span class="string">5s</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">site-card</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__flipInY</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">3s</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">site-card</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__animated</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">3s</span></span><br><span class="line">  <span class="attr">animate_css:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-wowjs/lib/animate.min.css</span></span><br><span class="line">  <span class="attr">wow_js:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-wowjs/lib/wow.min.js</span></span><br><span class="line">  <span class="attr">wow_init_js:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-wowjs/lib/wow_init.js</span></span><br></pre></td></tr></table></figure><h4 id="留言板">留言板</h4><p>PS: 留言板要添加了评论功能才能正常使用</p><p>先装插件<code>cnpm install hexo-butterfly-envelope --save</code></p><p>然后来到<code>_config.butterfly.yml</code>文件中，加上下面代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># envelope_comment</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/e2d3c450/</span></span><br><span class="line"><span class="comment"># envelope_comment</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/e2d3c450/</span></span><br><span class="line"><span class="attr">envelope_comment:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#控制开关</span></span><br><span class="line">  <span class="attr">custom_pic:</span></span><br><span class="line">    <span class="attr">cover:</span> <span class="string">https://cdn.cbd.int//hexo-butterfly-envelope/lib/violet.jpg</span> <span class="comment">#信笺头部图片</span></span><br><span class="line">    <span class="attr">line:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-envelope/lib/line.png</span> <span class="comment">#信笺底部图片</span></span><br><span class="line">    <span class="attr">beforeimg:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-envelope/lib/before.png</span> <span class="comment"># 信封前半部分</span></span><br><span class="line">    <span class="attr">afterimg:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-envelope/lib/after.png</span> <span class="comment"># 信封后半部分</span></span><br><span class="line">  <span class="attr">message:</span> <span class="comment">#信笺正文，多行文本，写法如下</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">有什么想问的？</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">有什么想说的？</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">有什么想吐槽的？</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">哪怕是有什么想吃的，都可以告诉我哦~</span></span><br><span class="line">  <span class="attr">bottom:</span> <span class="string">自动书记人偶竭诚为您服务！</span> <span class="comment">#仅支持单行文本</span></span><br><span class="line">  <span class="attr">height:</span> <span class="comment">#1050px，信封划出的高度</span></span><br><span class="line">  <span class="attr">path:</span> <span class="comment">#【可选】comments 的路径名称。默认为 comments，生成的页面为 comments/index.html</span></span><br><span class="line">  <span class="attr">front_matter:</span> <span class="comment">#【可选】comments页面的 front_matter 配置</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">留言板</span></span><br><span class="line">    <span class="attr">comments:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>然后在<code>_config.butterfly.yml</code>文件中找到<code>menu</code>元素，下面加上<code>留言板: /comments/ || fas fa-envelope</code></p><h4 id="电子钟">电子钟</h4><p>安装插件<code>npm install hexo-butterfly-clock-anzhiyu --save</code></p><p><code>_config.butterfly.yml</code>中添加:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># electric_clock</span></span><br><span class="line"><span class="comment"># see https://blog.anheyu.com/posts/fc18.html</span></span><br><span class="line"><span class="attr">electric_clock:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">  <span class="comment"># - /posts/</span></span><br><span class="line">  <span class="comment"># - /about/</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">class</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sticky_layout</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">loading:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-clock-anzhiyu/lib/loading.gif</span> <span class="comment">#加载动画自定义</span></span><br><span class="line">  <span class="attr">clock_css:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-clock-anzhiyu/lib/clock.min.css</span></span><br><span class="line">  <span class="attr">clock_js:</span> <span class="string">https://cdn.cbd.int/hexo-butterfly-clock-anzhiyu/lib/clock.min.js</span></span><br><span class="line">  <span class="attr">ip_api:</span> <span class="string">https://widget.qweather.net/simple/static/js/he-simple-common.js?v=2.0</span></span><br><span class="line">  <span class="attr">qweather_key:</span> <span class="comment"># 和风天气key</span></span><br><span class="line">  <span class="attr">gaud_map_key:</span> <span class="comment"># 高得地图web服务key</span></span><br><span class="line">  <span class="attr">default_rectangle:</span> <span class="literal">false</span> <span class="comment"># 开启后将一直显示rectangle位置的天气，否则将获取访问者的地理位置与天气</span></span><br><span class="line">  <span class="attr">rectangle:</span> <span class="number">112.982279</span><span class="string">,28.19409</span> <span class="comment"># 获取访问者位置失败时会显示该位置的天气，同时该位置为开启default_rectangle后的位置</span></span><br></pre></td></tr></table></figure><p>可以参考<a href="https://blog.anheyu.com/posts/fc18.html">给butterfly添加侧边栏电子钟 | 安知鱼 (anheyu.com)</a>，通过配置<code>qweather_key</code>，<code>qweather_key</code> 参数让插件变得更可靠</p><p>暂时更到这里，如果发现什么好玩的功能，我还会继续更新！</p>]]></content>
      
      
      <categories>
          
          <category> 课外技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+github博客搭建</title>
      <link href="/2025/01/15/build_myblog/"/>
      <url>/2025/01/15/build_myblog/</url>
      
        <content type="html"><![CDATA[<p>本文主要参考CSDN上的这篇博客<a href="https://blog.csdn.net/qq_58608526/article/details/124652412?ops_request_misc=%7B%22request%5Fid%22%3A%22ecf4dab623068a181c80d1e4c535fa6d%22%2C%22scm%22%3A%2220140713.130102334.pc%5Fall.%22%7D&amp;request_id=ecf4dab623068a181c80d1e4c535fa6d&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-11-124652412-null-null.142%5Ev101%5Epc_search_result_base6&amp;utm_term=githubhexo&amp;spm=1018.2226.3001.4187">Hexo+Github博客搭建教程 -CSDN博客</a>。</p><p>还有这篇<a href="https://blog.csdn.net/weixin_45377770/article/details/105228938?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=githubhexo&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-5-105228938.142%5Ev101%5Epc_search_result_base6&amp;spm=1018.2226.3001.4187">Github+Hexo搭建个人博客(图文详解) -CSDN博客</a>。</p><p>以及这篇<a href="https://blog.csdn.net/mjh1667002013/article/details/129290903?ops_request_misc=%7B%22request%5Fid%22%3A%228ae5c4b41d7a0f42fa2d95f0ea6ebbe2%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=8ae5c4b41d7a0f42fa2d95f0ea6ebbe2&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-4-129290903-null-null.142%5Ev101%5Epc_search_result_base6&amp;utm_term=butterfly%E7%BE%8E%E5%8C%96&amp;spm=1018.2226.3001.4187">【Hexo】Hexo搭建Butterfly主题并快速美化 -CSDN博客</a>。</p><p>以上这三篇文章对我帮助还是挺大的，我也是兜兜转转才找到，感兴趣可以去看看。</p><p><s>其实不用看我的这篇</s></p><h3 id="安装Git">安装Git</h3><p>贴个地址<a href="https://git-scm.com/downloads/win">Git - Downloading Package (git-scm.com)</a>。</p><p>安装最后一步添加路径时选择<code>Use Git from the Windows Command Prompt</code>，这样我们就可以直接在命令提示符里打开<code>git</code>了。</p><h3 id="安装node-js">安装node.js</h3><p>依旧贴个地址<a href="https://nodejs.cn/download/">下载 | Node.js 中文网 (nodejs.cn)</a></p><p>然后解压即可，解压到哪里都无所谓。</p><p>可以在cmd中分别输入<code>git -v</code>,<code>node -v</code>检查上面两步是否安装成功，出现版本号就代表成功。</p><p>没有的话可能是环境变量没配好（如果按部就班应该不会有问题）。</p><h3 id="Github仓库的建立">Github仓库的建立</h3><p>跟普通仓库建立过程一样，当时取名格式有严格要求: <strong><code>用户名.github.io</code></strong></p><p>用户名是你Github账号的用户名，同时上面的名字将作为你博客的访问域名（虽然可以通过其它渠道改，但是要RMB）。</p><p>成功以后可以试着访问一下，效果大概这样。<img src="/image/build_myblog/001" alt=""></p><h3 id="Hexo安装">Hexo安装</h3><p>先建个文件夹存放你的博客</p><p>然后点进去，右键，点击显示更多选项，看到有个Open Git Bash here，点一下</p><p>（顺便一提后面的大部分安装操作都得通过Git Bash且都在这个页面打开）</p><p><strong><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></strong></p><p>先输入上面代码 ，方便后续安装</p><p>然后输入<code>cnpm install -g hexo-cli</code></p><p>可用<code>hexo -v</code>检查是否成功（在Git Bash中也可以检查）</p><p>然后就可以利用Hexo搭建你的博客框架了，输入<code>Hexo init</code></p><p>如果你像我一样卡半天然后出现一个<code>Failed to install dependencies. Please run 'npm install' in &quot;D:\Bolg&quot; folder.</code>输入<code>cnpm install</code>即可。</p><p>好的，如果不出意外，恭喜你，你的博客框架已经完成了。</p><p>记住以下三步，你每次更新你的网站都得用到他们（不想预览第二步可以省略）：</p><ol><li>**<code>hexo g</code>**生成网页</li><li>**<code>hexo s</code>**本地预览</li><li>**<code>hexo d</code>**部署到网站</li></ol><p>现在由于博客还在本地，没有和我们的网站绑定，所以第三步暂时没法用，可先运行前两步预览一下。</p><p>大概长这样：<img src="/image/build_myblog/002" alt=""></p><h3 id="本地连接到网站">本地连接到网站</h3><p><s>我知道你很急，但你先别急，后面有的是你急的</s></p><p>第一次使用git后需要将用户名和邮箱进行初始化：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>注意看，<code>yourname</code>用你github用户名替换，而<code>youremail</code>则用你创建github时的邮箱替换</p><p>（顺便一提，还是在Git bash里操作）</p><p>可以输入下面代码来确认一下。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure><p>输入命令<code>cd ~/.ssh</code>进入.ssh文件<br>输入命令<code>ssh-keygen -t rsa -C &quot;youremail&quot;</code> 在你的电脑上生成密钥</p><p>输入命令<code>cat ~/.ssh/id_rsa.pub</code>打印密钥，复制输出内容。</p><p>打开<a href="http://github.com/">github</a>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个<code>SSH</code>，名字随便取，把你的密钥粘贴到下面，添加即可。</p><p>再回到Git bash输入<code>ssh -T git@github.com</code>，出现你的用户名即为成功（不用管后面）。</p><p>然后，各位电脑上都应该有VS Code对吧（当然其它编辑器也可以）。</p><p>直接把blog文件夹拖进去，打开_config.yml文件，be like:</p><p><img src="/image/build_myblog/003" alt=""></p><p>最后deploy那一块，改成这样：</p><p><img src="/image/build_myblog/004" alt=""></p><p>用户名改成自己的哈（主要是写我的也没用）</p><p>然后安装一下部署工具<code>cnpm install hexo-deployer-git --save</code></p><p>恭喜你，你可以开始将本地博客部署到你的网站了。</p><p>只需用一下之前提的三步（第二步可以省略，反正现在也没什么东西），再稍等片刻（有延迟的，等不及可以用第二步本地预览先观摩观摩），你和你的小伙伴就可以通过<code>用户名.github.io</code>访问到你的网站啦！</p><p><s>改域名不教，因为我不会</s></p><h3 id="其它">其它</h3><p>写的文章放在source下面的_posts里面发表，发表后记得用三步曲进行更新。</p><p>据说还得装个插件<code>npm i hexo-deployer-git</code></p><p>文章用的是markdown格式（还好我学过一点），可以像我一样用Typora来写。</p><p>但是发表前要在前面加一个Front matter，就是这种东西（现在只用title，后面加上主题的时候会有更多）：</p><p><img src="/image/build_myblog/005" alt=""></p><p>暂时写到这里，如果有什么发现我还会补充。关于主题的配置在我下一篇文章。</p><p>PS：关于文章里面的图片，可以把图片都放在source/images里面（没有的话可以新建一个），然后直接用相对路径，比如<code>![](/images/001)</code>（其中001是一张图片）</p><p>PS：还有关于_config.yml文件开头处，<code>language</code>后面改为<code>zh-CN</code>，<code>timezone</code>后面改为<code>Asia/Shanghai</code>，分别对应中文和中国时区。</p>]]></content>
      
      
      <categories>
          
          <category> 课外技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最初的起点</title>
      <link href="/2025/01/15/%E6%9C%80%E5%88%9D%E7%9A%84%E8%B5%B7%E7%82%B9/"/>
      <url>/2025/01/15/%E6%9C%80%E5%88%9D%E7%9A%84%E8%B5%B7%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>​    <em>“有志者事竟成，破釜沉舟，百二秦关终属楚；苦心人天不负，卧薪尝胆，三千越甲可吞吴。”</em></p><p>​    见证了一次次的报错，经过了一遍遍的调试，查阅了一篇篇的教程…… 终于，功夫不负有心人，我终于把我的个人博客给做了出来。我之前整个人的精神状态可以用这篇文章的封面来完美概括（希望我发出来的时候封面还健在）。</p><p>​    额，作为我的博客的第一篇文章，应该写点什么东西呢……</p><p>​    先说说我为什么要建这个博客吧。首先，我认为有一个博客，一个属于自己的网站是一件很Comfortable的事。就像你有了一栋房子，你可以随意装修成自己想要的风格，你可以在里面投入精力，投入感情，这是一个属于你的独立空间，就算你在里面大喊大叫，也没有人会来干涉。其次，我认为搭建自己的博客是一件很Cool的事。同样以房子为例，你是这栋房子的主人，你可以邀请好友甚至是陌生人进来欣赏你的杰作，你能得到理解，得到支持，得到他人的认可。最后，正如无数CS的前辈一样，博客可以用来记录自己的学习过程，包括笔记、心得等等。这样既能督促自己的学习，还能给后人留下便利，何乐而不为呢？</p><p>​    对对对，还得略提一下博客中会出现的内容，就是你可能在我的博客里看到什么东西。正如我前面说的，发布博客上的主要内容可能还是我的学习笔记（由于这篇博客是我大一寒假搭建的，所以大一上的坑我就不填了）。当然，可能会把我在课外学的东西也放进去，比如博客的搭建方法，包括我寒假可能学的Vocaloid等等。也可能会有一些文学性的东西，比如说一些人生感悟、诗作随笔等等。</p><p>​    就先这样吧，让我看看发以后出来的效果。<br><s>呃呃呃，感觉有点垮，算了，顺其自然好吧。。。</s></p>]]></content>
      
      
      <categories>
          
          <category> 个人杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 里程碑 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
